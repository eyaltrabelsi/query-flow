[[package]]
name = "atomicwrites"
version = "1.4.0"
description = "Atomic file writes."
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "21.4.0"
description = "Classes Without Boilerplate"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
tests_no_zope = ["cloudpickle", "pytest-mypy-plugins", "mypy", "six", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]
tests = ["cloudpickle", "zope.interface", "pytest-mypy-plugins", "mypy", "six", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]
docs = ["sphinx-notfound-page", "zope.interface", "sphinx", "furo"]
dev = ["cloudpickle", "pre-commit", "sphinx-notfound-page", "sphinx", "furo", "zope.interface", "pytest-mypy-plugins", "mypy", "six", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]

[[package]]
name = "black"
version = "21.12b0"
description = "The uncompromising code formatter."
category = "main"
optional = true
python-versions = ">=3.6.2"

[package.dependencies]
click = ">=7.1.2"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.9.0,<1"
platformdirs = ">=2"
tomli = ">=0.2.6,<2.0.0"
typed-ast = {version = ">=1.4.2", markers = "python_version < \"3.8\" and implementation_name == \"cpython\""}
typing-extensions = [
    {version = "!=3.10.0.1", markers = "python_version >= \"3.10\""},
    {version = ">=3.10.0.0", markers = "python_version < \"3.10\""},
]

[package.extras]
uvloop = ["uvloop (>=0.15.2)"]
python2 = ["typed-ast (>=1.4.3)"]
jupyter = ["tokenize-rt (>=3.2.0)", "ipython (>=7.8.0)"]
d = ["aiohttp (>=3.7.4)"]
colorama = ["colorama (>=0.4.3)"]

[[package]]
name = "bleach"
version = "4.1.0"
description = "An easy safelist-based HTML-sanitizing tool."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
packaging = "*"
six = ">=1.9.0"
webencodings = "*"

[[package]]
name = "boto3"
version = "1.24.51"
description = "The AWS SDK for Python"
category = "main"
optional = true
python-versions = ">= 3.7"

[package.dependencies]
botocore = ">=1.27.51,<1.28.0"
jmespath = ">=0.7.1,<2.0.0"
s3transfer = ">=0.6.0,<0.7.0"

[package.extras]
crt = ["botocore[crt] (>=1.21.0,<2.0a0)"]

[[package]]
name = "botocore"
version = "1.27.51"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = true
python-versions = ">= 3.7"

[package.dependencies]
jmespath = ">=0.7.1,<2.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (==0.13.8)"]

[[package]]
name = "bump2version"
version = "1.0.1"
description = "Version-bump your software with a single command!"
category = "main"
optional = true
python-versions = ">=3.5"

[[package]]
name = "certifi"
version = "2022.5.18.1"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.15.0"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "cfgv"
version = "3.3.1"
description = "Validate configuration and produce human readable error messages."
category = "main"
optional = true
python-versions = ">=3.6.1"

[[package]]
name = "charset-normalizer"
version = "2.0.12"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = true
python-versions = ">=3.5.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "click"
version = "8.0.4"
description = "Composable command line interface toolkit"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}

[[package]]
name = "colorama"
version = "0.4.4"
description = "Cross-platform colored terminal text."
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "colour"
version = "0.1.5"
description = "converts and manipulates various color representation (HSL, RVB, web, X11, ...)"
category = "main"
optional = true
python-versions = "*"

[package.extras]
test = ["nose"]

[[package]]
name = "coverage"
version = "6.2"
description = "Code coverage measurement for Python"
category = "main"
optional = true
python-versions = ">=3.6"

[package.extras]
toml = ["tomli"]

[[package]]
name = "cryptography"
version = "37.0.2"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.12"

[package.extras]
docs = ["sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)", "sphinx-rtd-theme"]
docstest = ["pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
pep8test = ["black", "flake8", "flake8-import-order", "pep8-naming"]
sdist = ["setuptools_rust (>=0.11.4)"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-subtests", "pytest-xdist", "pretend", "iso8601", "pytz", "hypothesis (>=1.11.4,!=3.79.2)"]

[[package]]
name = "distlib"
version = "0.3.4"
description = "Distribution utilities"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "docutils"
version = "0.18.1"
description = "Docutils -- Python Documentation Utilities"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "filelock"
version = "3.4.1"
description = "A platform independent file lock."
category = "main"
optional = true
python-versions = ">=3.6"

[package.extras]
testing = ["pytest-timeout (>=1.4.2)", "pytest-cov", "pytest (>=4)", "coverage (>=4)", "covdefaults (>=1.2.0)"]
docs = ["sphinx-autodoc-typehints (>=1.12)", "sphinx (>=4.1)", "furo (>=2021.8.17b43)"]

[[package]]
name = "flake8"
version = "3.9.2"
description = "the modular source code checker: pep8 pyflakes and co"
category = "main"
optional = true
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}
mccabe = ">=0.6.0,<0.7.0"
pycodestyle = ">=2.7.0,<2.8.0"
pyflakes = ">=2.3.0,<2.4.0"

[[package]]
name = "flake8-docstrings"
version = "1.6.0"
description = "Extension for flake8 which uses pydocstyle to check docstrings"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
flake8 = ">=3"
pydocstyle = ">=2.1"

[[package]]
name = "ghp-import"
version = "2.1.0"
description = "Copy your docs directly to the gh-pages branch."
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
python-dateutil = ">=2.8.1"

[package.extras]
dev = ["wheel", "flake8", "markdown", "twine"]

[[package]]
name = "identify"
version = "2.4.4"
description = "File identification library for Python"
category = "main"
optional = true
python-versions = ">=3.6.1"

[package.extras]
license = ["ukkonen"]

[[package]]
name = "idna"
version = "3.3"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = true
python-versions = ">=3.5"

[[package]]
name = "importlib-metadata"
version = "4.8.3"
description = "Read metadata from Python packages"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = ">=3.6.4", markers = "python_version < \"3.8\""}
zipp = ">=0.5"

[package.extras]
testing = ["importlib-resources (>=1.3)", "pytest-mypy", "pytest-black (>=0.3.7)", "pytest-perf (>=0.9.2)", "flufl.flake8", "pyfakefs", "pep517", "packaging", "pytest-enabler (>=1.0.1)", "pytest-cov", "pytest-flake8", "pytest-checkdocs (>=2.4)", "pytest (>=6)"]
perf = ["ipython"]
docs = ["rst.linker (>=1.9)", "jaraco.packaging (>=8.2)", "sphinx"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "isort"
version = "5.10.1"
description = "A Python utility / library to sort Python imports."
category = "main"
optional = true
python-versions = ">=3.6.1,<4.0"

[package.extras]
plugins = ["setuptools"]
colors = ["colorama (>=0.4.3,<0.5.0)"]
requirements_deprecated_finder = ["pip-api", "pipreqs"]
pipfile_deprecated_finder = ["requirementslib", "pipreqs"]

[[package]]
name = "jeepney"
version = "0.7.1"
description = "Low-level, pure Python DBus protocol wrapper."
category = "main"
optional = true
python-versions = ">=3.6"

[package.extras]
trio = ["async-generator", "trio"]
test = ["async-timeout", "trio", "testpath", "pytest-asyncio", "pytest-trio", "pytest"]

[[package]]
name = "jinja2"
version = "3.0.3"
description = "A very fast and expressive template engine."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jmespath"
version = "1.0.1"
description = "JSON Matching Expressions"
category = "main"
optional = true
python-versions = ">=3.7"

[[package]]
name = "keyring"
version = "23.4.1"
description = "Store and access your passwords safely."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
importlib-metadata = ">=3.6"
jeepney = {version = ">=0.4.2", markers = "sys_platform == \"linux\""}
pywin32-ctypes = {version = "<0.1.0 || >0.1.0,<0.1.1 || >0.1.1", markers = "sys_platform == \"win32\""}
SecretStorage = {version = ">=3.2", markers = "sys_platform == \"linux\""}

[package.extras]
testing = ["pytest-mypy", "pytest-black (>=0.3.7)", "pytest-enabler (>=1.0.1)", "pytest-cov", "pytest-flake8", "pytest-checkdocs (>=2.4)", "pytest (>=6)"]
docs = ["jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "jaraco.packaging (>=8.2)", "sphinx"]

[[package]]
name = "markdown"
version = "3.3.7"
description = "Python implementation of Markdown."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
importlib-metadata = {version = ">=4.4", markers = "python_version < \"3.10\""}

[package.extras]
testing = ["pyyaml", "coverage"]

[[package]]
name = "markupsafe"
version = "2.0.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "mccabe"
version = "0.6.1"
description = "McCabe checker, plugin for flake8"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "mergedeep"
version = "1.3.4"
description = "A deep merge function for 🐍."
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "mkdocs"
version = "1.3.0"
description = "Project documentation with Markdown."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
click = ">=3.3"
ghp-import = ">=1.0"
importlib-metadata = ">=4.3"
Jinja2 = ">=2.10.2"
Markdown = ">=3.2.1"
mergedeep = ">=1.3.4"
packaging = ">=20.5"
PyYAML = ">=3.10"
pyyaml-env-tag = ">=0.1"
watchdog = ">=2.0"

[package.extras]
i18n = ["babel (>=2.9.0)"]

[[package]]
name = "mkdocs-autorefs"
version = "0.2.1"
description = "Automatically link across pages in MkDocs."
category = "main"
optional = true
python-versions = ">=3.6,<4.0"

[package.dependencies]
Markdown = ">=3.3,<4.0"
mkdocs = ">=1.1,<2.0"

[[package]]
name = "mkdocs-include-markdown-plugin"
version = "1.0.0"
description = "Mkdocs Markdown includer plugin."
category = "main"
optional = true
python-versions = "*"

[package.extras]
test = ["pytest-cov (==2.10.1)", "pytest (==6.1.2)"]
dev = ["yamllint (==1.25.0)", "isort (==5.6.4)", "flake8-implicit-str-concat (==0.2.0)", "flake8-print (==4.0.0)", "flake8 (==3.8.4)", "pytest-cov (==2.10.1)", "pytest (==6.1.2)", "pre-commit (==2.9.2)", "bump2version (==1.0.1)", "twine (==3.2.0)"]

[[package]]
name = "mkdocs-material"
version = "6.2.8"
description = "A Material Design theme for MkDocs"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
markdown = ">=3.2"
mkdocs = ">=1.1"
mkdocs-material-extensions = ">=1.0"
Pygments = ">=2.4"
pymdown-extensions = ">=7.0"

[[package]]
name = "mkdocs-material-extensions"
version = "1.0.3"
description = "Extension pack for Python Markdown."
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "mkdocstrings"
version = "0.15.2"
description = "Automatic documentation from sources, for MkDocs."
category = "main"
optional = true
python-versions = ">=3.6,<4.0"

[package.dependencies]
Jinja2 = ">=2.11.1,<4.0"
Markdown = ">=3.3,<4.0"
MarkupSafe = ">=1.1,<3.0"
mkdocs = ">=1.1.1,<2.0.0"
mkdocs-autorefs = ">=0.1,<0.3"
pymdown-extensions = ">=6.3,<9.0"
pytkdocs = ">=0.2.0,<0.12.0"

[[package]]
name = "mypy"
version = "0.900"
description = "Optional static typing for Python"
category = "main"
optional = true
python-versions = ">=3.5"

[package.dependencies]
mypy-extensions = ">=0.4.3,<0.5.0"
toml = "*"
typed-ast = {version = ">=1.4.0,<1.5.0", markers = "python_version < \"3.8\""}
typing-extensions = ">=3.7.4"

[package.extras]
python2 = ["typed-ast (>=1.4.0,<1.5.0)"]
dmypy = ["psutil (>=4.0)"]

[[package]]
name = "mypy-extensions"
version = "0.4.3"
description = "Experimental type system extensions for programs checked with the mypy typechecker."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "nodeenv"
version = "1.6.0"
description = "Node.js virtual environment builder"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "numpy"
version = "1.21.6"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.7,<3.11"

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pandas"
version = "1.3.2"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.7.1"

[package.dependencies]
numpy = ">=1.17.3"
python-dateutil = ">=2.7.3"
pytz = ">=2017.3"

[package.extras]
test = ["pytest-xdist", "pytest (>=6.0)", "hypothesis (>=3.58)"]

[[package]]
name = "pathspec"
version = "0.9.0"
description = "Utility library for gitignore style pattern matching of file paths."
category = "main"
optional = true
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "pkginfo"
version = "1.8.2"
description = "Query metadatdata from sdists / bdists / installed packages."
category = "main"
optional = true
python-versions = "*"

[package.extras]
testing = ["nose", "coverage"]

[[package]]
name = "platformdirs"
version = "2.4.0"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "main"
optional = true
python-versions = ">=3.6"

[package.extras]
test = ["pytest-mock (>=3.6)", "pytest-cov (>=2.7)", "pytest (>=6)", "appdirs (==1.4.4)"]
docs = ["sphinx-autodoc-typehints (>=1.12)", "proselint (>=0.10.2)", "furo (>=2021.7.5b38)", "Sphinx (>=4)"]

[[package]]
name = "plotly"
version = "4.5.4"
description = "An open-source, interactive graphing library for Python"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
retrying = ">=1.3.3"
six = "*"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}

[package.extras]
testing = ["pytest-benchmark", "pytest"]
dev = ["tox", "pre-commit"]

[[package]]
name = "pre-commit"
version = "2.17.0"
description = "A framework for managing and maintaining multi-language pre-commit hooks."
category = "main"
optional = true
python-versions = ">=3.6.1"

[package.dependencies]
cfgv = ">=2.0.0"
identify = ">=1.0.0"
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}
nodeenv = ">=0.11.1"
pyyaml = ">=5.1"
toml = "*"
virtualenv = ">=20.0.8"

[[package]]
name = "psycopg2-binary"
version = "2.9.3"
description = "psycopg2 - Python-PostgreSQL Database Adapter"
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pyathena"
version = "2.3.0"
description = "Python DB API 2.0 (PEP 249) client for Amazon Athena"
category = "main"
optional = true
python-versions = ">=3.6.1,<4.0.0"

[package.dependencies]
boto3 = ">=1.4.4"
botocore = ">=1.5.52"
tenacity = ">=4.1.0"

[package.extras]
sqlalchemy = ["sqlalchemy (>=1.0.0,<2.0.0)"]
pandas = ["pyarrow (>=1.0.0)", "pandas (>=1.0.0)"]

[[package]]
name = "pycodestyle"
version = "2.7.0"
description = "Python style guide checker"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pydocstyle"
version = "6.1.1"
description = "Python docstring style checker"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
snowballstemmer = "*"

[package.extras]
toml = ["toml"]

[[package]]
name = "pyflakes"
version = "2.3.1"
description = "passive checker of Python programs"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pygments"
version = "2.12.0"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "pymdown-extensions"
version = "8.2"
description = "Extension pack for Python Markdown."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
Markdown = ">=3.2"

[[package]]
name = "pyparsing"
version = "3.0.7"
description = "Python parsing module"
category = "main"
optional = true
python-versions = ">=3.6"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pytest"
version = "6.2.5"
description = "pytest: simple powerful testing with Python"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
toml = "*"

[package.extras]
testing = ["xmlschema", "requests", "nose", "mock", "hypothesis (>=3.56)", "argcomplete"]

[[package]]
name = "pytest-cov"
version = "2.12.1"
description = "Pytest plugin for measuring coverage."
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
coverage = ">=5.2.1"
pytest = ">=4.6"
toml = "*"

[package.extras]
testing = ["virtualenv", "pytest-xdist", "six", "process-tests", "hunter", "fields"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "pytkdocs"
version = "0.9.0"
description = "Load Python objects documentation."
category = "main"
optional = true
python-versions = ">=3.6,<4.0"

[package.extras]
tests = ["pytest-xdist (>=2.1.0,<3.0.0)", "pytest-sugar (>=0.9.4,<0.10.0)", "pytest-randomly (>=3.4.1,<4.0.0)", "pytest-cov (>=2.10.1,<3.0.0)", "pytest (>=6.0.1,<7.0.0)", "pydantic (>=1.5.1,<2.0.0)", "mypy (>=0.782,<0.783)", "marshmallow (>=3.5.2,<4.0.0)", "invoke (>=1.4.1,<2.0.0)", "coverage (>=5.2.1,<6.0.0)"]

[[package]]
name = "pytz"
version = "2022.2.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywin32-ctypes"
version = "0.2.0"
description = ""
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0"
description = "YAML parser and emitter for Python"
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "pyyaml-env-tag"
version = "0.1"
description = "A custom YAML tag for referencing environment variables in YAML files. "
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
pyyaml = "*"

[[package]]
name = "readme-renderer"
version = "34.0"
description = "readme_renderer is a library for rendering \"readme\" descriptions for Warehouse"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
bleach = ">=2.1.0"
docutils = ">=0.13.1"
Pygments = ">=2.5.1"

[package.extras]
md = ["cmarkgfm (>=0.8.0)"]

[[package]]
name = "requests"
version = "2.27.1"
description = "Python HTTP for Humans."
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = {version = ">=2.0.0,<2.1.0", markers = "python_version >= \"3\""}
idna = {version = ">=2.5,<4", markers = "python_version >= \"3\""}
urllib3 = ">=1.21.1,<1.27"

[package.extras]
use_chardet_on_py3 = ["chardet (>=3.0.2,<5)"]
socks = ["win-inet-pton", "PySocks (>=1.5.6,!=1.5.7)"]

[[package]]
name = "requests-toolbelt"
version = "0.9.1"
description = "A utility belt for advanced users of python-requests"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
requests = ">=2.0.1,<3.0.0"

[[package]]
name = "retrying"
version = "1.3.3"
description = "Retrying"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
six = ">=1.7.0"

[[package]]
name = "rfc3986"
version = "1.5.0"
description = "Validating URI References per RFC 3986"
category = "main"
optional = true
python-versions = "*"

[package.extras]
idna2008 = ["idna"]

[[package]]
name = "s3transfer"
version = "0.6.0"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = true
python-versions = ">= 3.7"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[package.extras]
crt = ["botocore[crt] (>=1.20.29,<2.0a.0)"]

[[package]]
name = "secretstorage"
version = "3.3.2"
description = "Python bindings to FreeDesktop.org Secret Service API"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
cryptography = ">=2.0"
jeepney = ">=0.6"

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "snowballstemmer"
version = "2.2.0"
description = "This package provides 29 stemmers for 28 languages generated from Snowball algorithms."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "sqlalchemy"
version = "1.3.13"
description = "Database Abstraction Library"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
mssql = ["pyodbc"]
mssql_pymssql = ["pymssql"]
mssql_pyodbc = ["pyodbc"]
mysql = ["mysqlclient"]
oracle = ["cx-oracle"]
postgresql = ["psycopg2"]
postgresql_pg8000 = ["pg8000"]
postgresql_psycopg2binary = ["psycopg2-binary"]
postgresql_psycopg2cffi = ["psycopg2cffi"]
pymysql = ["pymysql"]

[[package]]
name = "tenacity"
version = "8.0.1"
description = "Retry code until it succeeds"
category = "main"
optional = true
python-versions = ">=3.6"

[package.extras]
doc = ["tornado (>=4.5)", "sphinx", "reno"]

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = true
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "1.2.3"
description = "A lil' TOML parser"
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "tox"
version = "3.25.0"
description = "tox is a generic virtualenv management and test command line tool"
category = "main"
optional = true
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
colorama = {version = ">=0.4.1", markers = "platform_system == \"Windows\""}
filelock = ">=3.0.0"
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
packaging = ">=14"
pluggy = ">=0.12.0"
py = ">=1.4.17"
six = ">=1.14.0"
toml = ">=0.9.4"
virtualenv = ">=16.0.0,<20.0.0 || >20.0.0,<20.0.1 || >20.0.1,<20.0.2 || >20.0.2,<20.0.3 || >20.0.3,<20.0.4 || >20.0.4,<20.0.5 || >20.0.5,<20.0.6 || >20.0.6,<20.0.7 || >20.0.7"

[package.extras]
testing = ["pathlib2 (>=2.3.3)", "psutil (>=5.6.1)", "pytest-randomly (>=1.0.0)", "pytest-mock (>=1.10.0)", "pytest-cov (>=2.5.1)", "pytest (>=4.0.0)", "freezegun (>=0.3.11)", "flaky (>=3.4.0)"]
docs = ["towncrier (>=18.5.0)", "sphinxcontrib-autoprogram (>=0.1.5)", "sphinx (>=2.0.0)", "pygments-github-lexers (>=0.0.5)"]

[[package]]
name = "tqdm"
version = "4.64.0"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = true
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
telegram = ["requests"]
slack = ["slack-sdk"]
notebook = ["ipywidgets (>=6)"]
dev = ["wheel", "twine", "py-make (>=0.1.0)"]

[[package]]
name = "twine"
version = "3.8.0"
description = "Collection of utilities for publishing packages on PyPI"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
colorama = ">=0.4.3"
importlib-metadata = ">=3.6"
keyring = ">=15.1"
pkginfo = ">=1.8.1"
readme-renderer = ">=21.0"
requests = ">=2.20"
requests-toolbelt = ">=0.8.0,<0.9.0 || >0.9.0"
rfc3986 = ">=1.4.0"
tqdm = ">=4.14"
urllib3 = ">=1.26.0"

[[package]]
name = "typed-ast"
version = "1.4.3"
description = "a fork of Python 2 and 3 ast modules with type comment support"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "typing-extensions"
version = "4.1.1"
description = "Backported and Experimental Type Hints for Python 3.6+"
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "urllib3"
version = "1.26.9"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]
secure = ["ipaddress", "certifi", "idna (>=2.0.0)", "cryptography (>=1.3.4)", "pyOpenSSL (>=0.14)"]
brotli = ["brotlipy (>=0.6.0)", "brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]

[[package]]
name = "virtualenv"
version = "20.14.1"
description = "Virtual Python Environment builder"
category = "main"
optional = true
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
distlib = ">=0.3.1,<1"
filelock = ">=3.2,<4"
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
platformdirs = ">=2,<3"
six = ">=1.9.0,<2"

[package.extras]
testing = ["packaging (>=20.0)", "pytest-timeout (>=1)", "pytest-randomly (>=1)", "pytest-mock (>=2)", "pytest-freezegun (>=0.4.1)", "pytest-env (>=0.6.2)", "pytest (>=4)", "flaky (>=3)", "coverage-enable-subprocess (>=1)", "coverage (>=4)"]
docs = ["towncrier (>=21.3)", "sphinx-rtd-theme (>=0.4.3)", "sphinx-argparse (>=0.2.5)", "sphinx (>=3)", "proselint (>=0.10.2)"]

[[package]]
name = "watchdog"
version = "2.1.8"
description = "Filesystem events monitoring"
category = "main"
optional = true
python-versions = ">=3.6"

[package.extras]
watchmedo = ["PyYAML (>=3.10)"]

[[package]]
name = "webencodings"
version = "0.5.1"
description = "Character encoding aliases for legacy web content"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "zipp"
version = "3.6.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = true
python-versions = ">=3.6"

[package.extras]
testing = ["pytest-mypy", "pytest-black (>=0.3.7)", "func-timeout", "jaraco.itertools", "pytest-enabler (>=1.0.1)", "pytest-cov", "pytest-flake8", "pytest-checkdocs (>=2.4)", "pytest (>=4.6)"]
docs = ["rst.linker (>=1.9)", "jaraco.packaging (>=8.2)", "sphinx"]

[extras]
dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]
doc = ["mkdocs", "mkdocs-include-markdown-plugin", "mkdocs-material", "mkdocstrings", "mkdocs-autorefs"]
test = ["pytest", "black", "isort", "mypy", "flake8", "flake8-docstrings", "pytest-cov", "colour", "pandas", "plotly", "psycopg2-binary", "pytest", "sqlalchemy", "pyathena", "numpy"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.7.1,<3.11"
content-hash = "07a362f7410ee310ff001ce939a070bd84bf82cbb1d420e6b801d5763cf0d2e6"

[metadata.files]
atomicwrites = []
attrs = []
black = []
bleach = []
boto3 = []
botocore = []
bump2version = []
certifi = []
cffi = []
cfgv = []
charset-normalizer = []
click = []
colorama = []
colour = []
coverage = []
cryptography = []
distlib = []
docutils = []
filelock = []
flake8 = []
flake8-docstrings = []
ghp-import = []
identify = []
idna = []
importlib-metadata = []
iniconfig = []
isort = []
jeepney = []
jinja2 = []
jmespath = []
keyring = []
markdown = []
markupsafe = []
mccabe = []
mergedeep = []
mkdocs = []
mkdocs-autorefs = []
mkdocs-include-markdown-plugin = []
mkdocs-material = []
mkdocs-material-extensions = []
mkdocstrings = []
mypy = []
mypy-extensions = []
nodeenv = []
numpy = []
packaging = []
pandas = []
pathspec = []
pkginfo = []
platformdirs = []
plotly = []
pluggy = []
pre-commit = []
psycopg2-binary = []
py = []
pyathena = []
pycodestyle = []
pycparser = []
pydocstyle = []
pyflakes = []
pygments = []
pymdown-extensions = []
pyparsing = []
pytest = []
pytest-cov = []
python-dateutil = []
pytkdocs = []
pytz = []
pywin32-ctypes = []
pyyaml = []
pyyaml-env-tag = []
readme-renderer = []
requests = []
requests-toolbelt = []
retrying = []
rfc3986 = []
s3transfer = []
secretstorage = []
six = []
snowballstemmer = []
sqlalchemy = []
tenacity = []
toml = []
tomli = []
tox = []
tqdm = []
twine = []
typed-ast = []
typing-extensions = []
urllib3 = []
virtualenv = []
watchdog = []
webencodings = []
zipp = []

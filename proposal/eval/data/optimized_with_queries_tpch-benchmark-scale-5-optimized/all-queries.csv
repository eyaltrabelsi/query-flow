,source,target,operation_type,label,label_metadata,node_hash,shared_read_blocks,actual_rows,shared_hit_blocks,shared_dirtied_blocks,local_read_blocks,local_hit_blocks,plan_width,local_written_blocks,local_dirtied_blocks,temp_written_blocks,temp_read_blocks,plan_rows,total_cost,actual_loops,actual_total_time,shared_written_blocks,actual_startup_time,query_hash,estimated_cost,redundent_operation,actual_startup_duration,actual_duration,estimated_cost_pct,actual_duration_pct,actual_plan_rows_ratio
0,0,3,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,1875000,130460,0,0,0,4,0,0,0,0,1875000,149210.0,4,922.158,0,0.026,7baf804a9cd4d1406107faf8aa69a4372af6cd9110a6595de1e7fc32,149210.0,False,0.026,922.158,100.0,100.0,1.0
1,1,2,Seq Scan,Customer,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",895c138c3976a8303b733c2d99101e80ecda8ffca4fe25539668c21f,0,187500,17915,0,0,0,26,0,0,0,0,2823,24265.81,4,166.302,0,0.046,7baf804a9cd4d1406107faf8aa69a4372af6cd9110a6595de1e7fc32,24265.81,False,0.046,166.302,100.0,100.0,66.41870350690755
2,2,3,Where,Customer*,"
Description: Filter relation to hold only relevant records.Filter condition: ((customer.c_acctbal > $1) AND (""substring""((customer.c_phone)::text, 1, 2) = ANY ('{25,31,14,29,30,24,10}'::text[])))",e5364b175a540986affbd5744e7170941f0f924502066a2a81b2a387,0,23699,17915,0,0,0,26,0,0,0,0,2823,24265.81,4,166.302,0,0.046,7baf804a9cd4d1406107faf8aa69a4372af6cd9110a6595de1e7fc32,0.0,False,-24265.764000000003,0.0,0.0,0.0,8.394969890187744
3,3,8,Hash Join,Orders ⋈ Customer*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Anti Join with (customer.c_custkey = orders.o_custkey)",04fbc07af806273e3fecf5595057d3b5b5f6efdd2e9b7a30e17feb80,0,7924,148522,0,0,0,38,0,0,0,0,1255,196941.31,4,2134.715,0,1902.993,7baf804a9cd4d1406107faf8aa69a4372af6cd9110a6595de1e7fc32,47731.31,False,-147307.007,1212.5570000000002,24.236311823050226,56.80182132041046,6.31394422310757
4,4,5,Seq Scan,Customer_1,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",7815f2f43065f8b9a64821752233b7a05780e3ba7a3fa9b6a6078105,0,187500,17924,0,0,0,6,0,0,0,0,7695,24265.81,4,240.432,0,0.056,7baf804a9cd4d1406107faf8aa69a4372af6cd9110a6595de1e7fc32,24265.81,False,0.056,240.432,100.0,100.0,24.366471734892787
5,5,6,Where,Customer*,"
Description: Filter relation to hold only relevant records.Filter condition: ((customer_1.c_acctbal > 0.00) AND (""substring""((customer_1.c_phone)::text, 1, 2) = ANY ('{25,31,14,29,30,24,10}'::text[])))",368450985647d2ce80c79b90bab2cf1e8d2f7042b56584cb11f6a245,0,47433,17924,0,0,0,6,0,0,0,0,7695,24265.81,4,240.432,0,0.056,7baf804a9cd4d1406107faf8aa69a4372af6cd9110a6595de1e7fc32,0.0,False,-24265.754,0.0,0.0,0.0,6.164132553606238
6,6,7,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['PARTIAL avg(customer_1.c_acctbal)']
Partial Mode: Partial
Strategy: Plain
",df96ff2c269c2eb5808398354393d080ea41a06595c0ec4adf88e517,0,1,17924,0,0,0,32,0,0,0,0,1,24285.06,4,248.337,0,248.336,7baf804a9cd4d1406107faf8aa69a4372af6cd9110a6595de1e7fc32,19.25,False,-24017.474000000002,7.905000000000001,0.07926684142431602,3.1831744766184666,1.0
7,7,8,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['avg(customer_1.c_acctbal)']
Partial Mode: Finalize
Strategy: Plain
",d08ff3d7af223739f659dbd1fafeb9a076eb46644f8655e13f353267,0,1,17924,0,0,0,32,0,0,0,0,1,25285.38,1,254.523,0,254.46,7baf804a9cd4d1406107faf8aa69a4372af6cd9110a6595de1e7fc32,1000.3199999999997,False,-24030.600000000002,6.186000000000007,3.9561200978589195,2.4304286842446485,1.0
8,8,262,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['(""substring""((customer.c_phone)::text, 1, 2))', 'count(*)', 'sum(customer.c_acctbal)']
Partial Mode: Simple
Strategy: Sorted
Group key: ['(""substring""((customer.c_phone)::text, 1, 2))']",c92618ee7b2e594525fac55295a6e388aadc2d2a3c66df25e318a985,0,7,166620,0,0,0,72,0,0,0,0,3891,223848.93,1,2489.654,0,2410.137,7baf804a9cd4d1406107faf8aa69a4372af6cd9110a6595de1e7fc32,26907.619999999995,False,-194531.173,354.93899999999985,12.020437176090141,14.256559345194145,555.8571428571429
9,9,10,Index Scan,L2,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",37a85efe1ac838de254327c4b97429516923e542695d98a4df06005b,0,2,132876,0,0,0,8,0,0,0,0,78,2.24,33183,0.01,0,0.01,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,2.24,False,0.01,0.01,100.0,100.0,39.0
10,10,24,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: (l2.l_suppkey <> l1.l_suppkey)",e38f3e51e89333f52c68310bff135e51b8090c090f3c12c69ac03106,0,1,132876,0,0,0,8,0,0,0,0,78,2.24,33183,0.01,0,0.01,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,0.0,False,-2.2300000000000004,0.0,0.0,0.0,78.0
11,11,12,Index Scan,L3,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",25b548d9f0bb1af5714ee5987228f931ea4a870d0879258deff38f2a,0,2,1472961,0,0,0,8,0,0,0,0,26,2.44,366788,0.009,0,0.009,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,2.44,False,0.009,0.009,100.0,100.0,13.0
12,12,23,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: ((l3.l_receiptdate > l3.l_commitdate) AND (l3.l_suppkey <> l1.l_suppkey))",26a935d0ac270785b4c70599cc8114eda473e15f249a3c8213823baa,0,1,1472961,0,0,0,8,0,0,0,0,26,2.44,366788,0.009,0,0.009,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,0.0,False,-2.431,0.0,0.0,0.0,26.0
13,13,14,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,1500000,130460,0,0,0,4,0,0,0,0,906688,153897.5,5,722.151,0,0.034,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,153897.5,False,0.034,722.151,100.0,100.0,1.654372838286158
14,14,22,Where,Orders*,"
Description: Filter relation to hold only relevant records.Filter condition: (orders.o_orderstatus = 'F'::bpchar)",41131e02356ac9b79d203d682f4dac48db7867d8f9db46dde8ebf4ea,0,730900,130460,0,0,0,4,0,0,0,0,906688,153897.5,5,722.151,0,0.034,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,0.0,False,-153897.466,0.0,0.0,0.0,1.2405089615542482
15,15,16,Seq Scan,Nation,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a50ed53558b17945873b4969d0b0b1b9b9977f9ee239f04a58795469,0,25,5,0,0,0,4,0,0,0,0,1,1.31,5,0.07,0,0.069,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,1.31,False,0.069,0.07,100.0,100.0,25.0
16,16,18,Where,Nation*,"
Description: Filter relation to hold only relevant records.Filter condition: (nation.n_name = 'PERU'::bpchar)",fa8346b29d5bb8e279b26055af3a5ebe1617a96d2c09f1a086ab90be,0,1,5,0,0,0,4,0,0,0,0,1,1.31,5,0.07,0,0.069,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,0.0,False,-1.241,0.0,0.0,0.0,1.0
17,17,18,Seq Scan,Supplier,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",4ca0f0ddbb9a6790abc1f8268f68b5b4e581048a5682b22c09b09dcc,0,10000,1109,0,0,0,34,0,0,0,0,29412,1403.12,5,2.688,0,0.016,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,1403.12,False,0.016,2.688,100.0,100.0,2.9412
18,18,21,Hash Join,Nation* ⋈ Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier.s_nationkey = nation.n_nationkey)",57debb3f95a5b196ba8535f8bbb91f15a25aa420438109458e5ef5a0,0,400,1114,0,0,0,30,0,0,0,0,1176,1526.5,5,4.11,0,0.153,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,123.38000000000011,False,-1402.9669999999999,1.4220000000000002,8.08254176220112,34.5985401459854,2.94
19,19,20,Seq Scan,L1,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a2a7b1416cf0a1d98179764dda46e81f69d5623875e9f8b85d407974,0,5999959,562395,0,0,0,8,0,0,0,0,2499983,656144.36,5,2974.646,0,0.033,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,656144.36,False,0.033,2974.646,100.0,100.0,2.399999919999456
20,20,21,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: (l1.l_receiptdate > l1.l_commitdate)",57617605ec835a803d84d741a813308549aae9e128a9d3690d2c61ae,0,3793621,562395,0,0,0,8,0,0,0,0,2499983,656144.36,5,2974.646,0,0.033,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,0.0,False,-656144.3269999999,0.0,0.0,0.0,1.5174587187192874
21,21,22,Hash Join,Nation* ⋈ Supplier ⋈ Lineitem*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (l1.l_suppkey = supplier.s_suppkey)",0b0e92b1ad2dc1698d1fef94e200f0b3224899ee8feade671af2a253,0,151747,563509,0,0,0,34,0,0,0,0,99716,667646.83,5,3913.577,0,4.418,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,11502.469999999972,False,-656139.942,938.931,1.7228375067698551,23.991632207568678,1.5217918889646596
22,22,23,Hash Join,Orders* ⋈ Nation* ⋈ Supplier ⋈ Lineitem*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (l1.l_orderkey = orders.o_orderkey)",91bd065b8b4cd7093f6f3c3a7f472a0e20ff794b2bd3fe89435f91dd,0,73358,694164,0,0,0,38,0,0,0,0,48220,833372.41,5,5280.138,0,1110.384,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,165725.58000000007,False,-666536.446,1366.5609999999997,19.886137099259148,25.881160681785204,1.5213189547905432
23,23,24,Nested Loop,Lineitem* ⋈ Orders* ⋈ Nation* ⋈ Supplier ⋈ Lineitem*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Anti Join",a4d3f08c1575b9f47b474c906d49f06238494af12c965fa20f5cc9d7,0,6637,2167125,0,0,0,38,0,0,0,0,1,862552.48,5,5970.357,0,1110.557,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,29180.06999999995,False,-832261.853,690.219,3.382990679013519,11.56076596424636,6637.0
24,24,25,Nested Loop,Lineitem* ⋈ Lineitem* ⋈ Orders* ⋈ Nation* ⋈ Supplier ⋈ Lineitem*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Semi Join with (orders.o_orderkey = l2.l_orderkey)",f2c028cb24c09ae1d1049d67c8c238a3b819183e6d216bd6b1b2744b,0,19841,2300001,0,0,0,26,0,0,0,0,1,863555.79,1,6195.247,0,1116.788,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,1003.3100000000559,False,-861435.692,224.89000000000033,0.1161835762805847,3.6300409007098557,19841.0
25,25,26,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['supplier.s_name', 'count(*)']
Partial Mode: Simple
Strategy: Sorted
Group key: ['supplier.s_name']",e176512db0deabd66b66a87b9d65db41b4e4542a4cc06a9e85601d79,0,1998,2300001,0,0,0,34,0,0,0,0,1,863555.82,1,6244.141,0,6099.37,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,0.029999999911524355,False,-857456.42,48.89399999999932,3.4740081899424127e-06,0.7830380511906975,1998.0
26,26,261,Limit,LIMIT 100,"
Description: Returns a specified number of rows from a record set.LIMIT: 100",219e0f8451b029d5147a305115daf1d46103986aa93db8a7a0295172,0,100,2300007,0,0,0,34,0,0,0,0,1,863555.84,1,6245.003,0,6108.758,814b04ec100938b43524f8220ef37dd94d1489540d1cfffc387e6e82,0.02000000001862645,False,-857447.0619999999,0.86200000000008,2.3160054153100803e-06,0.013803035803186644,100.0
27,27,28,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,30,1438336,0,0,0,5,0,0,0,0,1,125.19,43496,0.06,0,0.036,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,125.19,False,0.036,0.06,100.0,100.0,30.0
28,28,29,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: ((lineitem.l_shipdate >= '1996-01-01'::date) AND (lineitem.l_shipdate < '1997-01-01 00:00:00'::timestamp without time zone) AND (lineitem.l_suppkey = partsupp.ps_suppkey))",4816380c2cc1abe14f350c193f15b779d2cf634aa40bd0eeaaf85435,0,1,1438336,0,0,0,5,0,0,0,0,1,125.19,43496,0.06,0,0.036,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,0.0,False,-125.154,0.0,0.0,0.0,1.0
29,29,30,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['(0.5 * sum(lineitem.l_quantity))']
Partial Mode: Simple
Strategy: Plain
",85668d8e2c0311f0d1077c1344890659e81010c60203f6ba639b5e89,0,1,1438336,0,0,0,32,0,0,0,0,1,125.2,43496,0.063,0,0.063,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,0.010000000000005116,False,-125.127,0.0030000000000000027,0.007987220447288432,4.761904761904765,1.0
30,30,31,Index Scan,Partsupp,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",b7af1440e3ad5cacdc63ff3cbeb0f79174519d466ddb347871f45d96,0,4,1482715,0,0,0,8,0,0,0,0,3,1258.66,10874,0.278,0,0.215,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,1133.46,False,-124.985,0.21500000000000002,90.05291341585495,77.33812949640287,1.3333333333333333
31,31,35,Where,Partsupp*,"
Description: Filter relation to hold only relevant records.Filter condition: ((partsupp.ps_availqty)::numeric > (SubPlan 1))",ab265dc6eebe446dd53689e704b5de262bbc4b0ac3b1c651b84893d1,0,3,1482715,0,0,0,8,0,0,0,0,3,1258.66,10874,0.278,0,0.215,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,0.0,False,-1258.4450000000002,0.0,0.0,0.0,1.0
32,32,33,Seq Scan,Part,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",22c5f8c5f3b14c12e92266af272370ce2881b0c042e3fc86fddf2065,0,250000,20482,0,0,0,4,0,0,0,0,3258,24514.26,4,127.127,0,0.068,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,24514.26,False,0.068,127.127,100.0,100.0,76.7341927562922
33,33,34,Where,Part*,"
Description: Filter relation to hold only relevant records.Filter condition: ((part.p_name)::text ~~ 'goldenrod%'::text)",14a980b380d96cfcd1b36858fc08148ce36d3437a07bc4d685c363c7,0,2718,20482,0,0,0,4,0,0,0,0,3258,24514.26,4,127.127,0,0.068,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,0.0,False,-24514.192,0.0,0.0,0.0,1.1986754966887416
34,34,35,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['part.p_partkey']
Partial Mode: Simple
Strategy: Hashed
Group key: ['part.p_partkey']",dbb30fee3e2ed38400f0000d608c47c4eae46a8ecd6ae50d2d321033,0,10874,20482,0,0,0,4,0,0,0,0,10101,26650.62,1,166.203,0,144.183,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,2136.3600000000006,False,-24370.076999999997,39.07600000000001,8.01617373254356,23.511007623207767,1.0765270765270765
35,35,40,Nested Loop,Partsupp* ⋈ AGG,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,29708,1503197,0,0,0,4,0,0,0,0,13468,12740661.11,1,3213.16,0,144.754,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,12714010.49,False,-26505.865999999998,3046.957,99.79082231471426,94.82742845049734,2.2058212058212057
36,36,37,Seq Scan,Nation,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a50ed53558b17945873b4969d0b0b1b9b9977f9ee239f04a58795469,0,25,1,0,0,0,4,0,0,0,0,1,1.31,1,0.021,0,0.02,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,1.31,False,0.02,0.021,100.0,100.0,25.0
37,37,39,Where,Nation*,"
Description: Filter relation to hold only relevant records.Filter condition: (nation.n_name = 'MOROCCO'::bpchar)",cf708e96142c3b8d4d8d33c58a353dd126073d8904021d872c212b39,0,1,1,0,0,0,4,0,0,0,0,1,1.31,1,0.021,0,0.02,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,0.0,False,-1.29,0.0,0.0,0.0,1.0
38,38,39,Seq Scan,Supplier,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",4ca0f0ddbb9a6790abc1f8268f68b5b4e581048a5682b22c09b09dcc,0,50000,1109,0,0,0,59,0,0,0,0,50000,1609.0,1,8.526,0,0.023,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,1609.0,False,0.023,8.526,100.0,100.0,1.0
39,39,40,Hash Join,Nation* ⋈ Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier.s_nationkey = nation.n_nationkey)",57debb3f95a5b196ba8535f8bbb91f15a25aa420438109458e5ef5a0,0,2011,1110,0,0,0,55,0,0,0,0,2000,1817.83,1,14.514,0,0.07,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,208.82999999999993,False,-1608.93,5.9879999999999995,11.487872903406805,41.25671765192228,1.0055
40,40,260,Hash Join,Partsupp* ⋈ AGG ⋈ Nation* ⋈ Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Semi Join with (supplier.s_suppkey = partsupp.ps_suppkey)",fe01d2754525e1e1828f77c90c61e0bfec9b3e6dc09e7838fe594d52,0,906,1504307,0,0,0,51,0,0,0,0,539,12742663.25,1,3258.606,0,3243.447,185cfda53c7ca72edd624dd040091c80e1fbe00f554cb8594d71bc48,2002.140000000596,False,-12737417.662999999,45.44600000000037,0.01571210005883657,1.394645440412261,1.6808905380333952
41,41,42,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,30,79184,0,0,0,21,0,0,0,0,1,119.6,2404,0.387,0,0.359,1f891b6c4c99499576902b1324dc87869c1ac46dd3e016674d1ead84,119.6,False,0.359,0.387,100.0,100.0,30.0
42,42,45,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: ((lineitem.l_shipmode = ANY ('{AIR,""AIR REG""}'::bpchar[])) AND (lineitem.l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((lineitem.l_quantity >= '8'::numeric) AND (lineitem.l_quantity <= '18'::numeric)) OR ((lineitem.l_quantity >= '18'::numeric) AND (lineitem.l_quantity <= '28'::numeric)) OR ((lineitem.l_quantity >= '25'::numeric) AND (lineitem.l_quantity <= '35'::numeric))) AND (((part.p_brand = 'Brand#32'::bpchar) AND (part.p_container = ANY ('{""SM CASE"",""SM BOX"",""SM PACK"",""SM PKG""}'::bpchar[])) AND (lineitem.l_quantity >= '8'::numeric) AND (lineitem.l_quantity <= '18'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{""MED BAG"",""MED BOX"",""MED PKG"",""MED PACK""}'::bpchar[])) AND (lineitem.l_quantity >= '18'::numeric) AND (lineitem.l_quantity <= '28'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#51'::bpchar) AND (part.p_container = ANY ('{""LG CASE"",""LG BOX"",""LG PACK"",""LG PKG""}'::bpchar[])) AND (lineitem.l_quantity >= '25'::numeric) AND (lineitem.l_quantity <= '35'::numeric) AND (part.p_size <= 15))))",42b069af681644f224e5800e5525132bd31673bd75a5cadd7bb32be6,0,0,79184,0,0,0,21,0,0,0,0,1,119.6,2404,0.387,0,0.359,1f891b6c4c99499576902b1324dc87869c1ac46dd3e016674d1ead84,0.0,False,-119.241,0.0,0.0,0.0,inf
43,43,44,Seq Scan,Part,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",22c5f8c5f3b14c12e92266af272370ce2881b0c042e3fc86fddf2065,0,250000,20482,0,0,0,30,0,0,0,0,766,34191.68,4,173.875,0,4.304,1f891b6c4c99499576902b1324dc87869c1ac46dd3e016674d1ead84,34191.68,False,4.304,173.875,100.0,100.0,326.37075718015666
44,44,45,Where,Part*,"
Description: Filter relation to hold only relevant records.Filter condition: ((part.p_size >= 1) AND (((part.p_brand = 'Brand#32'::bpchar) AND (part.p_container = ANY ('{""SM CASE"",""SM BOX"",""SM PACK"",""SM PKG""}'::bpchar[])) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{""MED BAG"",""MED BOX"",""MED PKG"",""MED PACK""}'::bpchar[])) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#51'::bpchar) AND (part.p_container = ANY ('{""LG CASE"",""LG BOX"",""LG PACK"",""LG PKG""}'::bpchar[])) AND (part.p_size <= 15))))",3eb021f2330667eac9f30d3fe1abe8ff25fcc77654c909d9c6f8c413,0,601,20482,0,0,0,30,0,0,0,0,766,34191.68,4,173.875,0,4.304,1f891b6c4c99499576902b1324dc87869c1ac46dd3e016674d1ead84,0.0,False,-34187.376000000004,0.0,0.0,0.0,1.2745424292845258
45,45,46,Nested Loop,Lineitem* ⋈ Part*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,148,99666,0,0,0,12,0,0,0,0,178,125812.55,4,411.217,0,7.187,1f891b6c4c99499576902b1324dc87869c1ac46dd3e016674d1ead84,91620.87,False,-34184.493,237.34199999999998,72.8233153210868,57.716971817799354,1.2027027027027026
46,46,47,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: [""PARTIAL sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))""]
Partial Mode: Partial
Strategy: Plain
",805d87e64678795ddda7f153472258991b7c1d418b4936661395649a,0,1,99666,0,0,0,32,0,0,0,0,1,125813.9,4,415.638,0,415.637,1f891b6c4c99499576902b1324dc87869c1ac46dd3e016674d1ead84,1.3499999999912689,False,-125396.913,4.420999999999992,0.001073013395174356,1.0636659785678866,1.0
47,47,259,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: [""sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))""]
Partial Mode: Finalize
Strategy: Plain
",9c3f3e655e7984d033020fed3736876b06107a34dc573562c711181e,0,1,99666,0,0,0,32,0,0,0,0,1,126814.22,1,467.277,0,435.904,1f891b6c4c99499576902b1324dc87869c1ac46dd3e016674d1ead84,1000.320000000007,False,-125377.996,51.63900000000001,0.7888074381563889,11.051046809494157,1.0
48,48,56,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,7,200,0,0,0,9,0,0,0,0,78,2.13,48,0.016,0,0.014,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,2.13,False,0.014,0.016,100.0,100.0,11.142857142857142
49,49,50,Seq Scan,Lineitem_1,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",093fa727b4696933e74eaa780ae47fb4708886a365e49d0694e96efb,0,29999795,2811975,0,0,0,9,0,0,0,0,29999796,862392.96,5,10589.067,0,0.192,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,862392.96,False,0.192,10589.067,100.0,100.0,1.000000033333561
50,50,51,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['lineitem_1.l_orderkey']
Partial Mode: Simple
Strategy: Hashed
Group key: ['lineitem_1.l_orderkey']",80ee3e5c281226a00eab22600e0ce91d23686f6d4e164b116f861525,0,7500000,2811975,0,0,0,4,0,0,937290,536445,128421,1018170.87,5,55294.934,0,35274.159,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,155777.91000000003,False,-827118.801,44705.867,15.299780674338093,80.84984241051811,58.4016632793702
51,51,55,Having,AGG*,"
Description: Filter relation to hold only relevant records.Filter condition: (sum(lineitem_1.l_quantity) > '313'::numeric)",7c9a7060a9909c3cfc585ca6d0c6f2d8dd40afde291f21b4d4e05fbb,0,48,2811975,0,0,0,4,0,0,937290,536445,128421,1018170.87,5,55294.934,0,35274.159,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,0.0,False,-982896.711,0.0,0.0,0.0,2675.4375
52,52,54,Seq Scan,Customer,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",895c138c3976a8303b733c2d99101e80ecda8ffca4fe25539668c21f,0,150000,17915,0,0,0,23,0,0,0,0,241935,20334.35,5,99.689,0,0.027,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,20334.35,False,0.027,99.689,100.0,100.0,1.6129
53,53,54,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,1500000,130460,0,0,0,20,0,0,0,0,1875000,149210.0,5,475.612,0,0.044,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,149210.0,False,0.044,475.612,100.0,100.0,1.25
54,54,55,Hash Join,Customer ⋈ Orders,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (orders.o_custkey = customer.c_custkey)",cb70ae0c056598a36c51aae2537fc76ca09ba60005433f9bfd78bb85,0,1500000,148387,0,0,0,39,0,0,0,0,1875000,185648.17,5,2102.345,0,178.427,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,36438.17000000001,False,-149031.573,1626.7329999999997,19.627540632369286,77.37707179363996,1.25
55,55,56,Hash Join,AGG* ⋈ Customer ⋈ Orders,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (orders.o_orderkey = lineitem_1.l_orderkey)",60e2d4cb6d5b44118feeb4d2e2943b48197452f8297509c67c7f3b67,0,10,2960362,0,0,0,43,0,0,937290,536445,32105,1211630.39,5,57875.912,0,55806.751,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,193459.5199999999,False,-962364.119,2580.9779999999955,15.966875839091484,4.459502944852075,3210.5
56,56,57,Nested Loop,Lineitem ⋈ AGG* ⋈ Customer ⋈ Orders,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,336,2960678,0,0,0,44,0,0,937290,536445,513681,1603831.0,1,59159.693,0,57889.535,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,392200.6100000001,False,-1153740.855,1283.7810000000027,24.45398611200308,2.1700264739372512,1528.8125
57,57,58,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['customer.c_name', 'customer.c_custkey', 'orders.o_orderkey', 'orders.o_orderdate', 'orders.o_totalprice', 'sum(lineitem.l_quantity)']
Partial Mode: Simple
Strategy: Sorted
Group key: ['orders.o_totalprice', 'orders.o_orderdate', 'customer.c_name', 'customer.c_custkey', 'orders.o_orderkey']",2340bfe8b05e78606d442c75158876cfe00c9910e06c4c337e19a155,0,48,2960678,0,0,0,71,0,0,937290,536445,513681,1617957.23,1,59159.86,0,57889.587,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,14126.229999999981,False,-1545941.413,0.16700000000128057,0.8730904462783594,0.000282285995946036,10701.6875
58,58,258,Limit,LIMIT 48,"
Description: Returns a specified number of rows from a record set.LIMIT: 48",0dd12943c52c71dbe76d4ef6891e6698be5567b278ced384278f11e2,0,48,2960678,0,0,0,71,0,0,937290,536445,100,1215112.46,1,59159.874,0,57889.591,b4aede1023160fd70fa548b05cac889d24e497b8803c5419ccaf8599,-402844.77,False,-1560067.639,0.014000000002852175,-33.15287952853352,2.3664688675388616e-05,2.0833333333333335
59,59,60,Index Scan,Lineitem_1,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",369b0a6b85c086c4d236412ce8a28d5d8ffc00cf51dac7b53f954533,0,31,939588,0,0,0,5,0,0,0,0,30,124.96,27747,0.026,0,0.002,da8d073f9a3f1e52658fa0446ff6ede03b3e6f26ed0803dc78777395,124.96,False,0.002,0.026,100.0,100.0,1.0333333333333334
60,60,61,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['(0.2 * avg(lineitem_1.l_quantity))']
Partial Mode: Simple
Strategy: Plain
",bead797f98f28d65bb50a540731d3f76609419b5e07ec54040be810b,0,1,939588,0,0,0,32,0,0,0,0,1,125.05,27747,0.035,0,0.035,da8d073f9a3f1e52658fa0446ff6ede03b3e6f26ed0803dc78777395,0.09000000000000341,False,-124.925,0.009000000000000005,0.07197121151539658,25.714285714285722,1.0
61,61,62,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,30,970119,0,0,0,17,0,0,0,0,10,3873.43,928,1.139,0,0.511,da8d073f9a3f1e52658fa0446ff6ede03b3e6f26ed0803dc78777395,3748.3799999999997,False,-124.539,1.104,96.77159520115246,96.92712906057946,3.0
62,62,65,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: (lineitem.l_quantity < (SubPlan 1))",3583424e428daa611469956bfdff89c392566117ef37f609aceda105,0,3,970119,0,0,0,17,0,0,0,0,10,3873.43,928,1.139,0,0.511,da8d073f9a3f1e52658fa0446ff6ede03b3e6f26ed0803dc78777395,0.0,False,-3872.919,0.0,0.0,0.0,3.3333333333333335
63,63,64,Seq Scan,Part,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",22c5f8c5f3b14c12e92266af272370ce2881b0c042e3fc86fddf2065,0,1000000,20482,0,0,0,4,0,0,0,0,998,35482.0,1,387.127,0,0.284,da8d073f9a3f1e52658fa0446ff6ede03b3e6f26ed0803dc78777395,35482.0,False,0.284,387.127,100.0,100.0,1002.0040080160321
64,64,65,Where,Part*,"
Description: Filter relation to hold only relevant records.Filter condition: ((part.p_brand = 'Brand#42'::bpchar) AND (part.p_container = 'MED CAN'::bpchar))",e2a110d893081505a2a57ba08d716e40cb967dc6c9597e33ff403fb1,0,928,20482,0,0,0,4,0,0,0,0,998,35482.0,1,387.127,0,0.284,da8d073f9a3f1e52658fa0446ff6ede03b3e6f26ed0803dc78777395,0.0,False,-35481.716,0.0,0.0,0.0,1.0754310344827587
65,65,66,Nested Loop,Lineitem* ⋈ Part*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,2452,990601,0,0,0,8,0,0,0,0,9980,3901263.61,1,1445.995,0,0.702,da8d073f9a3f1e52658fa0446ff6ede03b3e6f26ed0803dc78777395,3865781.61,False,-35481.298,1058.868,99.09049980859919,73.22763909972026,4.070146818923328
66,66,257,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['(sum(lineitem.l_extendedprice) / 7.0)']
Partial Mode: Simple
Strategy: Plain
",2713cdec8c23318fd6f0b606ee834fdf2521a302442cd76a3578234f,0,1,990601,0,0,0,32,0,0,0,0,1,3901288.57,1,1446.706,0,1446.704,da8d073f9a3f1e52658fa0446ff6ede03b3e6f26ed0803dc78777395,24.959999999962747,False,-3899816.906,0.7110000000000127,0.0006397886122010899,0.04914612920662614,1.0
67,67,68,Seq Scan,Part,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",22c5f8c5f3b14c12e92266af272370ce2881b0c042e3fc86fddf2065,0,200000,20482,0,0,0,40,0,0,0,0,48154,28546.52,5,146.223,0,0.043,589520949e58a151234dae4659976110edddd3632c20ec20d21d1183,28546.52,False,0.043,146.223,100.0,100.0,4.153341363126636
68,68,73,Where,Part*,"
Description: Filter relation to hold only relevant records.Filter condition: ((part.p_brand <> 'Brand#54'::bpchar) AND ((part.p_type)::text !~~ 'MEDIUM BURNISHED%'::text) AND (part.p_size = ANY ('{29,19,36,32,43,10,40,42}'::integer[])))",9b999b802a8173ae1624ed744d5128e352092d92a92edcad02c350cb,0,29577,20482,0,0,0,40,0,0,0,0,48154,28546.52,5,146.223,0,0.043,589520949e58a151234dae4659976110edddd3632c20ec20d21d1183,0.0,False,-28546.477,0.0,0.0,0.0,1.628089393785712
69,69,70,Seq Scan,Supplier,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",4ca0f0ddbb9a6790abc1f8268f68b5b4e581048a5682b22c09b09dcc,0,50000,5545,0,0,0,4,0,0,0,0,5,1734.0,5,18.145,0,0.217,589520949e58a151234dae4659976110edddd3632c20ec20d21d1183,1734.0,False,0.217,18.145,100.0,100.0,10000.0
70,70,71,Where,Supplier*,"
Description: Filter relation to hold only relevant records.Filter condition: ((supplier.s_comment)::text ~~ '%Customer%Complaints%'::text)",2277d728750fc092934d877d36667b3c1cb766a5a743afc6cacd1894,0,26,5545,0,0,0,4,0,0,0,0,5,1734.0,5,18.145,0,0.217,589520949e58a151234dae4659976110edddd3632c20ec20d21d1183,0.0,False,-1733.783,0.0,0.0,0.0,5.2
71,71,72,Seq Scan,Partsupp,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",ee5ac20ac025afcda2bbaca9bff9bce167dda8b411062ce6b1e650b0,0,800000,92746,0,0,0,8,0,0,0,0,500000,101435.01,5,551.013,0,18.222,589520949e58a151234dae4659976110edddd3632c20ec20d21d1183,99701.01,False,-1715.778,532.868,98.29053105037403,96.70697424561672,1.6
72,72,73,Where,Partsupp*,"
Description: Filter relation to hold only relevant records.Filter condition: (NOT (hashed SubPlan 1))",e783c39caf30e8e9ddf92096544aa842b8f5ce7374929d9428f43c53,0,799584,92746,0,0,0,8,0,0,0,0,500000,101435.01,5,551.013,0,18.222,589520949e58a151234dae4659976110edddd3632c20ec20d21d1183,0.0,False,-101416.788,0.0,0.0,0.0,1.599168
73,73,74,Hash Join,Part* ⋈ Partsupp*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (partsupp.ps_partkey = part.p_partkey)",4a8a36b89e07de6e607e717a23d691db9cdb7b1f53e8bbc642738493,0,118252,113300,0,0,0,40,0,0,0,0,74638,132699.22,5,971.158,0,185.819,589520949e58a151234dae4659976110edddd3632c20ec20d21d1183,31264.210000000006,False,-101249.19099999999,420.145,23.56020630716594,43.26227040296223,1.5843404164098716
74,74,256,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['part.p_brand', 'part.p_type', 'part.p_size', 'count(DISTINCT partsupp.ps_suppkey)']
Partial Mode: Simple
Strategy: Sorted
Group key: ['part.p_brand', 'part.p_type', 'part.p_size']",6506092f69069099bf31cbcee288a83c4f95c79c335a334119f196fd,0,27706,113388,0,0,0,44,0,0,0,0,80144,179274.32,1,1861.297,0,1289.017,589520949e58a151234dae4659976110edddd3632c20ec20d21d1183,46575.100000000006,False,-131410.203,890.139,25.979794540567774,47.823587530630526,2.892658629899661
75,75,76,Seq Scan,Supplier,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",4ca0f0ddbb9a6790abc1f8268f68b5b4e581048a5682b22c09b09dcc,0,50000,1109,0,0,0,71,0,0,0,0,50000,1609.0,1,30.736,0,0.026,e46cd4db52163605c6a93cdb895fc95623bc756583fb85eae03767c8,1609.0,False,0.026,30.736,100.0,100.0,1.0
76,76,255,Hash Join,Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (revenue0.supplier_no = supplier.s_suppkey)",c119585247c777184d5a42f22d4d7710d5e57deaec0d10b63cf9bf17,0,1,563504,0,0,0,103,0,0,0,0,251,3365.65,1,3681.231,0,3679.565,e46cd4db52163605c6a93cdb895fc95623bc756583fb85eae03767c8,1756.65,False,2070.565,3650.4950000000003,52.19348417096252,99.16506190456398,251.0
77,77,254,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['max(revenue0_1.total_revenue)']
Partial Mode: Simple
Strategy: Plain
",2b13901dd06e85e66d0db0e6a1aa3bc1701f3d7a848b76b4467005f5,0,1,0,0,0,0,32,0,0,0,0,1,1128.2,1,62.799,0,62.798,e46cd4db52163605c6a93cdb895fc95623bc756583fb85eae03767c8,1128.2,False,62.798,62.799,100.0,100.0,1.0
78,78,79,Seq Scan,Lineitem,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a0ccab0149e24cda520e5e673745d3789407045fc371ddf445db8605,0,5999959,562395,0,0,0,16,0,0,0,0,283574,674894.23,5,2730.246,0,0.07,e46cd4db52163605c6a93cdb895fc95623bc756583fb85eae03767c8,674894.23,False,0.07,2730.246,100.0,100.0,21.15835372777476
79,79,80,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: ((lineitem.l_shipdate >= '1993-03-01'::date) AND (lineitem.l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))",8c969b930098a67e70d19ecf6aa8fad0996372b8ff13e165ce937dd3,0,230051,562395,0,0,0,16,0,0,0,0,283574,674894.23,5,2730.246,0,0.07,e46cd4db52163605c6a93cdb895fc95623bc756583fb85eae03767c8,0.0,False,-674894.16,0.0,0.0,0.0,1.2326571064676963
80,80,81,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['lineitem.l_suppkey', ""PARTIAL sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))""]
Partial Mode: Partial
Strategy: Hashed
Group key: ['lineitem.l_suppkey']",fbff3f001f50947bf661883b05280814a9b14caaa41a008cb1f20bb2,0,49503,562395,0,0,0,36,0,0,0,0,50142,678356.75,5,3109.298,0,3066.102,e46cd4db52163605c6a93cdb895fc95623bc756583fb85eae03767c8,3462.5200000000186,False,-671828.128,379.0519999999997,0.5104275884333751,12.190918979139333,1.0129083085873583
81,81,253,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['lineitem.l_suppkey', ""sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))""]
Partial Mode: Finalize
Strategy: Hashed
Group key: ['lineitem.l_suppkey']",7746499d219c99b5d2d125ab5ddedab43bd94e0de3aa64e68763fee1,0,50000,562395,0,0,0,36,0,0,0,0,50142,701544.59,1,3583.499,0,3545.639,e46cd4db52163605c6a93cdb895fc95623bc756583fb85eae03767c8,23187.839999999967,False,-674811.111,474.201,3.3052553366565007,13.23290448804367,1.00284
82,82,85,Seq Scan,Part,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",22c5f8c5f3b14c12e92266af272370ce2881b0c042e3fc86fddf2065,0,200000,20482,0,0,0,25,0,0,0,0,322581,23707.81,5,110.416,0,0.022,b4efad6ebb4195ca6e57b9d5ccdd93d2781ad69efd221786cc99ad94,23707.81,False,0.022,110.416,100.0,100.0,1.612905
83,83,84,Seq Scan,Lineitem,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a0ccab0149e24cda520e5e673745d3789407045fc371ddf445db8605,0,5999959,562395,0,0,0,16,0,0,0,0,92924,674894.23,5,2643.043,0,0.072,b4efad6ebb4195ca6e57b9d5ccdd93d2781ad69efd221786cc99ad94,674894.23,False,0.072,2643.043,100.0,100.0,64.56845379019414
84,84,85,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: ((lineitem.l_shipdate >= '1993-02-01'::date) AND (lineitem.l_shipdate < '1993-03-01 00:00:00'::timestamp without time zone))",dff71c17231d57edea2ae322b67534264c7e1cf01bc5b0e56f34264d,0,70087,562395,0,0,0,16,0,0,0,0,92924,674894.23,5,2643.043,0,0.072,b4efad6ebb4195ca6e57b9d5ccdd93d2781ad69efd221786cc99ad94,0.0,False,-674894.1579999999,0.0,0.0,0.0,1.3258378871973404
85,85,86,Hash Join,Part ⋈ Lineitem*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (lineitem.l_partkey = part.p_partkey)",7ac8d0e482448f6d07b4b098b3c80b524f5cb56e3b9d0d145de75e3a,0,70087,583212,0,0,0,33,0,0,0,0,92924,703282.53,5,2997.831,0,217.262,b4efad6ebb4195ca6e57b9d5ccdd93d2781ad69efd221786cc99ad94,28388.300000000047,False,-674676.968,354.788,4.036542753308552,11.834823243871986,1.3258378871973404
86,86,87,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: [""PARTIAL sum(CASE WHEN ((part.p_type)::text ~~ 'PROMO%'::text) THEN (lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)) ELSE '0'::numeric END)"", ""PARTIAL sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))""]
Partial Mode: Partial
Strategy: Plain
",99b3aeaefe7a86a4ebf622e1d8274542096233dc0b00e76a0c727fdd,0,1,583212,0,0,0,64,0,0,0,0,1,704908.71,5,3067.84,0,3067.836,b4efad6ebb4195ca6e57b9d5ccdd93d2781ad69efd221786cc99ad94,1626.1799999999348,False,-700214.694,70.00900000000001,0.23069370216746718,2.2820290497548767,1.0
87,87,252,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: [""((100.00 * sum(CASE WHEN ((part.p_type)::text ~~ 'PROMO%'::text) THEN (lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)) ELSE '0'::numeric END)) / sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))))""]
Partial Mode: Finalize
Strategy: Plain
",0d76c4cdb7f33c254157a10bd0646ff20302fbf82bfa06ff37aa5f66,0,1,583212,0,0,0,32,0,0,0,0,1,705909.17,1,3217.394,0,3093.74,b4efad6ebb4195ca6e57b9d5ccdd93d2781ad69efd221786cc99ad94,1000.4600000000792,False,-701814.97,149.55399999999963,0.1417264490274406,4.64829610548163,1.0
88,88,91,Seq Scan,Customer,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",895c138c3976a8303b733c2d99101e80ecda8ffca4fe25539668c21f,0,750000,17915,0,0,0,4,0,0,0,0,750000,25415.0,1,330.045,0,0.035,242e0136538f3e502c6b3217c857621c0394bbfdd9b55b51f20f49c1,25415.0,False,0.035,330.045,100.0,100.0,1.0
89,89,90,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,7500000,130460,0,0,0,8,0,0,0,0,7499250,224210.0,1,5381.389,0,16.544,242e0136538f3e502c6b3217c857621c0394bbfdd9b55b51f20f49c1,224210.0,False,16.544,5381.389,100.0,100.0,1.000100010001
90,90,91,Where,Orders*,"
Description: Filter relation to hold only relevant records.Filter condition: ((orders.o_comment)::text !~~ '%pending%packages%'::text)",0f693c817f6ff10050e57c4878db93044ffea8cf9b0c208780d609ad,0,7419827,130460,0,0,0,8,0,0,0,0,7499250,224210.0,1,5381.389,0,16.544,242e0136538f3e502c6b3217c857621c0394bbfdd9b55b51f20f49c1,0.0,False,-224193.456,0.0,0.0,0.0,1.0107041579271323
91,91,92,Hash Join,Customer ⋈ Orders*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Right Join with (orders.o_custkey = customer.c_custkey)",6eebcbc321d5b1272375ca2a069bedeed93230aae5dbaec26841961e,0,7669838,148375,0,0,0,8,0,0,0,0,7499250,362114.69,1,11994.017,0,627.238,242e0136538f3e502c6b3217c857621c0394bbfdd9b55b51f20f49c1,137904.69,False,-223582.762,6612.628,38.083152605601285,55.132721589439136,1.0227473414008068
92,92,93,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['customer.c_custkey', 'count(orders.o_orderkey)']
Partial Mode: Simple
Strategy: Hashed
Group key: ['customer.c_custkey']",dab4273e4c7c1530d421e03ba8bc386c1e7e90b3d06b2f0a5a76411e,0,750000,148375,0,0,0,12,0,0,0,0,750000,407110.94,1,17131.366,0,16840.749,242e0136538f3e502c6b3217c857621c0394bbfdd9b55b51f20f49c1,44996.25,False,-345273.941,5137.349000000002,11.052576970788355,29.987970603161486,1.0
93,93,251,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['(count(orders.o_orderkey))', 'count(*)']
Partial Mode: Simple
Strategy: Hashed
Group key: ['count(orders.o_orderkey)']",f8447adca84c4d693e0a4f6c1968d111221e00e8c0a075b32bf1f7bb,0,43,148375,0,0,0,16,0,0,0,0,200,418362.94,1,17289.868,0,17289.852,242e0136538f3e502c6b3217c857621c0394bbfdd9b55b51f20f49c1,11252.0,False,-389821.088,158.50199999999677,2.6895307696231407,0.9167334302378525,4.651162790697675
94,94,97,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,1500000,130460,0,0,0,20,0,0,0,0,1875000,149210.0,5,789.323,0,0.029,2dc8d301861cc7c5189786ee3e760e380ea7577e87d8905008fb6270,149210.0,False,0.029,789.323,100.0,100.0,1.25
95,95,96,Seq Scan,Lineitem,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a0ccab0149e24cda520e5e673745d3789407045fc371ddf445db8605,0,5999959,562395,0,0,0,15,0,0,0,0,36378,731143.85,5,3051.017,0,0.141,2dc8d301861cc7c5189786ee3e760e380ea7577e87d8905008fb6270,731143.85,False,0.141,3051.017,100.0,100.0,164.93372367914674
96,96,97,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: ((lineitem.l_shipmode = ANY ('{AIR,RAIL}'::bpchar[])) AND (lineitem.l_commitdate < lineitem.l_receiptdate) AND (lineitem.l_shipdate < lineitem.l_commitdate) AND (lineitem.l_receiptdate >= '1993-01-01'::date) AND (lineitem.l_receiptdate < '1994-01-01 00:00:00'::timestamp without time zone))",a3ad01f9403e93e98abfccafbd1db2c6ab2e23b603d35e6a01b3586b,0,31314,562395,0,0,0,15,0,0,0,0,36378,731143.85,5,3051.017,0,0.141,2dc8d301861cc7c5189786ee3e760e380ea7577e87d8905008fb6270,0.0,False,-731143.709,0.0,0.0,0.0,1.1617168039854378
97,97,98,Hash Join,Orders ⋈ Lineitem*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (lineitem.l_orderkey = orders.o_orderkey)",ddf2729164ff248a8a5215ae290f047f64be0d1c2c2c9f0c025e8457,0,31314,692914,0,0,0,27,0,0,0,0,36378,904064.18,5,4810.889,0,1597.882,2dc8d301861cc7c5189786ee3e760e380ea7577e87d8905008fb6270,172920.33000000007,False,-729545.968,1759.8720000000003,19.126997156330212,36.58101444452367,1.1617168039854378
98,98,99,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['lineitem.l_shipmode', ""PARTIAL sum(CASE WHEN ((orders.o_orderpriority = '1-URGENT'::bpchar) OR (orders.o_orderpriority = '2-HIGH'::bpchar)) THEN 1 ELSE 0 END)"", ""PARTIAL sum(CASE WHEN ((orders.o_orderpriority <> '1-URGENT'::bpchar) AND (orders.o_orderpriority <> '2-HIGH'::bpchar)) THEN 1 ELSE 0 END)""]
Partial Mode: Partial
Strategy: Sorted
Group key: ['lineitem.l_shipmode']",ee706c9b9ed69d824e0fe1e80ee4f730ff999d18982485cecbb528ba,0,2,693142,0,0,0,27,0,0,0,0,7,907547.59,5,4862.826,0,4854.361,2dc8d301861cc7c5189786ee3e760e380ea7577e87d8905008fb6270,3483.409999999916,False,-899209.819,51.9369999999999,0.3838267037875024,1.0680415050836674,3.5
99,99,250,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['lineitem.l_shipmode', ""sum(CASE WHEN ((orders.o_orderpriority = '1-URGENT'::bpchar) OR (orders.o_orderpriority = '2-HIGH'::bpchar)) THEN 1 ELSE 0 END)"", ""sum(CASE WHEN ((orders.o_orderpriority <> '1-URGENT'::bpchar) AND (orders.o_orderpriority <> '2-HIGH'::bpchar)) THEN 1 ELSE 0 END)""]
Partial Mode: Finalize
Strategy: Sorted
Group key: ['lineitem.l_shipmode']",7f105b12862997da67d507d0668e1c83b2e1e607d485e730c6ec0462,0,2,693142,0,0,0,27,0,0,0,0,7,908551.26,1,5018.445,0,4893.044,2dc8d301861cc7c5189786ee3e760e380ea7577e87d8905008fb6270,1003.6700000000419,False,-902654.546,155.6189999999997,0.1104692761088727,3.1009406300158653,3.5
100,100,105,Index Scan,Partsupp,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",b7af1440e3ad5cacdc63ff3cbeb0f79174519d466ddb347871f45d96,0,80,171395,0,0,0,18,0,0,0,0,80,9.07,2065,0.336,0,0.01,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,9.07,False,0.01,0.336,100.0,100.0,1.0
101,101,102,Seq Scan,Nation,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a50ed53558b17945873b4969d0b0b1b9b9977f9ee239f04a58795469,0,25,1,0,0,0,4,0,0,0,0,1,1.31,1,0.025,0,0.023,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,1.31,False,0.023,0.025,100.0,100.0,25.0
102,102,104,Where,Nation*,"
Description: Filter relation to hold only relevant records.Filter condition: (nation.n_name = 'INDIA'::bpchar)",12ec05a1c244e7d8a8e286eeabc139ce5471567c077987bad20f69be,0,1,1,0,0,0,4,0,0,0,0,1,1.31,1,0.025,0,0.023,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,0.0,False,-1.2870000000000001,0.0,0.0,0.0,1.0
103,103,104,Seq Scan,Supplier,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",4ca0f0ddbb9a6790abc1f8268f68b5b4e581048a5682b22c09b09dcc,0,50000,1109,0,0,0,8,0,0,0,0,50000,1609.0,1,30.334,0,0.027,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,1609.0,False,0.027,30.334,100.0,100.0,1.0
104,104,105,Hash Join,Nation* ⋈ Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier.s_nationkey = nation.n_nationkey)",57debb3f95a5b196ba8535f8bbb91f15a25aa420438109458e5ef5a0,0,2065,1110,0,0,0,4,0,0,0,0,2000,1817.83,1,40.319,0,0.084,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,208.82999999999993,False,-1608.916,9.985000000000003,11.487872903406805,24.76499913192292,1.0325
105,105,106,Nested Loop,Partsupp ⋈ Nation* ⋈ Supplier,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,165200,172505,0,0,0,14,0,0,0,0,159955,21565.62,1,788.162,0,0.107,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,19747.79,False,-1817.723,747.8430000000001,91.57070374049066,94.88442731316658,1.03279047232034
106,106,107,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['partsupp.ps_partkey', 'sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))']
Partial Mode: Simple
Strategy: Hashed
Group key: ['partsupp.ps_partkey']",ddfda566eed054e1e272b3bda55d87e2b6b96cb4c72a3e70d86b16f9,0,155270,345045,0,0,0,36,0,0,0,0,53318,27164.05,1,1397.439,0,1397.435,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,5598.43,False,-20168.184999999998,609.277,20.609702897763775,43.59954173312753,2.912149743051127
107,107,249,Having,AGG*,"
Description: Filter relation to hold only relevant records.Filter condition: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)",a79cc6e0a97d53e8ac67e09f22969dc194052879dc0256a57eadb401,0,0,345045,0,0,0,36,0,0,0,0,53318,27164.05,1,1397.439,0,1397.435,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,0.0,False,-25766.614999999998,0.0,0.0,0.0,inf
108,108,113,Index Scan,Partsupp_1,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",e7c578a7f92850224b1f1f08cad778477bcca3c490430d10a4140f09,0,80,171396,0,0,0,14,0,0,0,0,80,9.07,2065,0.156,0,0.005,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,9.07,False,0.005,0.156,100.0,100.0,1.0
109,109,110,Seq Scan,Nation_1,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",fa106da414161938b83f2c2fe2875a3ac2f4f7c7728a9d30a4616a89,0,25,2,0,0,0,4,0,0,0,0,1,1.31,2,0.036,0,0.034,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,1.31,False,0.034,0.036,100.0,100.0,25.0
110,110,112,Where,Nation*,"
Description: Filter relation to hold only relevant records.Filter condition: (nation_1.n_name = 'INDIA'::bpchar)",fea3c134cce2f9985e91e56562509da9053a06c685ae9d16e0f662e4,0,1,2,0,0,0,4,0,0,0,0,1,1.31,2,0.036,0,0.034,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,0.0,False,-1.276,0.0,0.0,0.0,1.0
111,111,112,Seq Scan,Supplier_1,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",6ac9e2882e6c2972917de8bb5d5155e44fd092f2fa039aafad94f5e0,0,25000,1109,0,0,0,8,0,0,0,0,29412,1403.12,2,4.884,0,0.009,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,1403.12,False,0.009,4.884,100.0,100.0,1.17648
112,112,113,Hash Join,Nation* ⋈ Supplier_1,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier_1.s_nationkey = nation_1.n_nationkey)",46bacc4d695f68704803f338a72831b1187cb66b5416afe170626912,0,1032,1144,0,0,0,4,0,0,0,0,1176,1526.5,2,9.545,0,0.124,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,123.38000000000011,False,-1402.9959999999999,4.661,8.08254176220112,48.831849135673124,1.1395348837209303
113,113,114,Nested Loop,Partsupp_1 ⋈ Nation* ⋈ Supplier_1,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,82600,172540,0,0,0,10,0,0,0,0,94091,13138.2,2,204.293,0,0.158,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,11611.7,False,-1526.342,194.74800000000002,88.38120899362166,95.32778900892347,1.1391162227602905
114,114,115,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['PARTIAL sum((partsupp_1.ps_supplycost * (partsupp_1.ps_availqty)::numeric))']
Partial Mode: Partial
Strategy: Plain
",85762ffd1c43ed02fd5dc19f4065e6be43fbd27e991407b89bf27f1b,0,1,172540,0,0,0,32,0,0,0,0,1,13843.9,2,275.121,0,275.119,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,705.6999999999989,False,-12863.081,70.82799999999997,5.09755199040732,25.744308867734556,1.0
115,115,248,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['(sum((partsupp_1.ps_supplycost * (partsupp_1.ps_availqty)::numeric)) * 0.0001000000)']
Partial Mode: Finalize
Strategy: Plain
",e314c4edd3e014ed1be7427207d2431bcb01a0743fe67dbd34766bc6,0,1,172540,0,0,0,32,0,0,0,0,1,14844.02,1,287.347,0,287.274,0f07e3519f0393411f7e6102d417b1a301ae0e306458b88f5a8b4224,1000.1200000000008,False,-13556.626,12.225999999999999,6.737527974228011,4.254786025258659,1.0
116,116,124,Seq Scan,Nation,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a50ed53558b17945873b4969d0b0b1b9b9977f9ee239f04a58795469,0,25,4,0,0,0,30,0,0,0,0,25,1.25,4,0.091,0,0.086,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,1.25,False,0.086,0.091,100.0,100.0,1.0
117,117,118,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,4,1139100,0,0,0,16,0,0,0,0,19,8.04,280721,0.016,0,0.014,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,8.04,False,0.014,0.016,100.0,100.0,4.75
118,118,121,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: (lineitem.l_returnflag = 'R'::bpchar)",532e3dfedfc7b20e963be2852311781e4fa0d0bec5c71bed5817fc8e,0,2,1139100,0,0,0,16,0,0,0,0,19,8.04,280721,0.016,0,0.014,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,0.0,False,-8.026,0.0,0.0,0.0,9.5
119,119,120,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,1875000,130460,0,0,0,8,0,0,0,0,69242,158585.0,4,742.81,0,0.028,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,158585.0,False,0.028,742.81,100.0,100.0,27.07894052742555
120,120,121,Where,Orders*,"
Description: Filter relation to hold only relevant records.Filter condition: ((orders.o_orderdate >= '1995-01-01'::date) AND (orders.o_orderdate < '1995-04-01 00:00:00'::timestamp without time zone))",852f05ab21f18036f8681156e00cdf387b2be1fda988620fc749a308,0,70180,130460,0,0,0,8,0,0,0,0,69242,158585.0,4,742.81,0,0.028,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,0.0,False,-158584.972,0.0,0.0,0.0,1.0135466913145201
121,121,123,Nested Loop,Lineitem* ⋈ Orders*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,117601,1269560,0,0,0,16,0,0,0,0,67876,728722.36,4,1941.893,0,0.143,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,570137.36,False,-158584.857,1199.083,78.23793961804603,61.74814987231532,1.732585891920561
122,122,123,Seq Scan,Customer,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",895c138c3976a8303b733c2d99101e80ecda8ffca4fe25539668c21f,0,187500,17915,0,0,0,148,0,0,0,0,241935,20334.35,4,69.676,0,0.013,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,20334.35,False,0.013,69.676,100.0,100.0,1.29032
123,123,124,Hash Join,Lineitem* ⋈ Orders* ⋈ Customer,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (customer.c_custkey = orders.o_custkey)",dc27e624cd2ccf32ce2ab08ee8c14344f416ca272245c794a3a9dc5f,0,117601,1287475,0,0,0,160,0,0,0,0,87581,751938.63,4,2245.352,0,2041.275,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,23216.27000000002,False,-726681.085,303.45899999999983,3.087521916515982,13.514985623634951,1.342768408673114
124,124,125,Hash Join,Nation ⋈ Lineitem* ⋈ Orders* ⋈ Customer,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (customer.c_nationkey = nation.n_nationkey)",57a787b3a545701248253ff524aca1defb7bb249633750570a86396f,0,117601,1287623,0,0,0,182,0,0,0,0,87581,753144.43,4,2291.053,0,2041.561,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,1205.8000000000466,False,-749897.069,45.70100000000002,0.16010209356524702,1.9947596149019697,1.342768408673114
125,125,126,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['customer.c_custkey', 'customer.c_name', ""sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))"", 'customer.c_acctbal', 'nation.n_name', 'customer.c_address', 'customer.c_phone', 'customer.c_comment']
Partial Mode: Simple
Strategy: Hashed
Group key: ['customer.c_custkey', 'customer.c_name', 'customer.c_acctbal', 'customer.c_phone', 'nation.n_name', 'customer.c_address', 'customer.c_comment']",98a78e1a3521ca36e35020ab042289cdc010f3266202e4e3c494c490,0,177049,1287623,0,0,0,202,0,0,0,0,271502,791475.96,1,3204.256,0,3055.907,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,38331.52999999991,False,-750088.523,913.203,4.843044127328885,28.49968916341266,1.5334850804014708
126,126,247,Limit,LIMIT 20,"
Description: Returns a specified number of rows from a record set.LIMIT: 20",1dd0de97c6ebeb41baeeb04adc181524ba5a5422494a1c808b5861ec,0,20,1287626,0,0,0,202,0,0,0,0,20,798700.58,1,3320.033,0,3318.12,fcf5c28a636499d46dd6379059fb03ebcd666dfad03b4fa6ec989a1f,7224.619999999995,False,-788157.84,115.77700000000004,0.9045467326441651,3.487224373974598,1.0
127,127,139,Seq Scan,Nation,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a50ed53558b17945873b4969d0b0b1b9b9977f9ee239f04a58795469,0,25,2,0,0,0,30,0,0,0,0,25,1.25,2,0.048,0,0.045,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,1.25,False,0.045,0.048,100.0,100.0,1.0
128,128,129,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,29,7142989,0,0,0,29,0,0,0,0,1,1.63,216540,0.054,0,0.011,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,1.63,False,0.011,0.054,100.0,100.0,29.0
129,129,134,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: (partsupp.ps_suppkey = lineitem.l_suppkey)",1b8c17db771711b05593406a8dc8e78dab046bd5dc80aac286cd23a8,0,7,7142989,0,0,0,29,0,0,0,0,1,1.63,216540,0.054,0,0.011,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,0.0,False,-1.619,0.0,0.0,0.0,7.0
130,130,133,Index Scan,Partsupp,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",b7af1440e3ad5cacdc63ff3cbeb0f79174519d466ddb347871f45d96,0,4,221104,0,0,0,14,0,0,0,0,10,4.81,54135,0.013,0,0.01,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,4.81,False,0.01,0.013,100.0,100.0,2.5
131,131,132,Seq Scan,Part,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",22c5f8c5f3b14c12e92266af272370ce2881b0c042e3fc86fddf2065,0,500000,20482,0,0,0,4,0,0,0,0,9775,24514.26,2,296.114,0,0.02,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,24514.26,False,0.02,296.114,100.0,100.0,51.150895140664964
132,132,133,Where,Part*,"
Description: Filter relation to hold only relevant records.Filter condition: ((part.p_name)::text ~~ '%ivory%'::text)",92623148ef5e669b3272da1f77a665d34a634c0a6209048fed05fbbb,0,27068,20482,0,0,0,4,0,0,0,0,9775,24514.26,2,296.114,0,0.02,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,0.0,False,-24514.239999999998,0.0,0.0,0.0,2.7691048593350382
133,133,134,Nested Loop,Partsupp ⋈ Part*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,108270,241586,0,0,0,18,0,0,0,0,39101,72477.26,2,699.069,0,0.061,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,47963.0,False,-24514.198999999997,402.955,66.17661870771605,57.6416634123384,2.7689828904631595
134,134,136,Nested Loop,Lineitem* ⋈ Partsupp ⋈ Part*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,811690,7384575,0,0,0,35,0,0,0,0,24,136500.77,2,6868.94,0,0.118,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,64023.509999999995,False,-72477.14199999999,6169.870999999999,46.903405746355865,89.82275285560799,33820.416666666664
135,135,136,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,3750000,130460,0,0,0,8,0,0,0,0,1875000,149210.0,2,1339.422,0,0.012,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,149210.0,False,0.012,1339.422,100.0,100.0,2.0
136,136,138,Hash Join,Lineitem* ⋈ Partsupp ⋈ Part* ⋈ Orders,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (orders.o_orderkey = lineitem.l_orderkey)",7bba668cae95e930f54623180042c86be42fae415e2759ce33f06538,0,811690,7515035,0,0,0,35,0,0,0,0,18,292742.38,2,11264.79,0,7660.759,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,143532.38,False,-141549.241,4395.850000000001,49.030270232823824,39.02292008994399,45093.88888888889
137,137,138,Seq Scan,Supplier,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",4ca0f0ddbb9a6790abc1f8268f68b5b4e581048a5682b22c09b09dcc,0,25000,1109,0,0,0,8,0,0,0,0,29412,1403.12,2,9.46,0,0.015,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,1403.12,False,0.015,9.46,100.0,100.0,1.17648
138,138,139,Hash Join,Lineitem* ⋈ Partsupp ⋈ Part* ⋈ Orders ⋈ Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier.s_suppkey = lineitem.l_suppkey)",649245ea8cbaa3812f39dbb1d2a947b25ca239496e196577a1c4887d,0,811690,7516144,0,0,0,31,0,0,0,0,43,294256.13,2,12309.409,0,11890.297,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,1513.75,False,-280852.083,1044.6189999999988,0.5144327834393798,8.486345688895371,18876.511627906977
139,139,140,Hash Join,Nation ⋈ Lineitem* ⋈ Partsupp ⋈ Part* ⋈ Orders ⋈ Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier.s_nationkey = nation.n_nationkey)",57debb3f95a5b196ba8535f8bbb91f15a25aa420438109458e5ef5a0,0,811690,7516163,0,0,0,57,0,0,0,0,43,294258.5,2,12769.462,0,11890.424,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,2.3699999999953434,False,-282365.706,460.0529999999999,0.0008054142870963264,3.6027594584642637,18876.511627906977
140,140,141,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['nation.n_name', ""(date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))"", ""PARTIAL sum(((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)) - (partsupp.ps_supplycost * lineitem.l_quantity)))""]
Partial Mode: Partial
Strategy: Sorted
Group key: ['nation.n_name', ""(date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))""]",8bc29e858b56a79080f20bf04b28ca3f374f1325826e63d7058eb5f0,0,175,7516177,0,0,0,66,0,0,0,0,43,294261.27,2,14945.482,0,13845.056,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,2.7700000000186265,False,-280413.444,2176.0200000000004,0.0009413403265807378,14.55971777959386,4.069767441860465
141,141,246,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['nation.n_name', ""(date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))"", ""sum(((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)) - (partsupp.ps_supplycost * lineitem.l_quantity)))""]
Partial Mode: Finalize
Strategy: Sorted
Group key: ['nation.n_name', ""(date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))""]",6115a2618cc5b05920e11df6f861d97ef8ba83f7d6283684f6a81609,0,175,7516177,0,0,0,66,0,0,0,0,73,295267.83,1,15286.129,0,13857.645,08eecf20a34b500fcf99c3dcdc267cee97162616c359141a403ee762,1006.5599999999977,False,-280403.625,340.64700000000084,0.3408972795986605,2.228471315399738,2.3972602739726026
142,142,159,Seq Scan,N2,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",ce99bd8b20e429314045e7d0f6c9312c348e94ee2f9b1d0b360714bd,0,25,2,0,0,0,30,0,0,0,0,25,1.25,2,0.045,0,0.041,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,1.25,False,0.041,0.045,100.0,100.0,1.0
143,143,144,Seq Scan,Region,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5a126a828c46cfb5bfa32edb987d185c6c82c0c2f6b6466e0e25945a,0,5,2,0,0,0,4,0,0,0,0,1,1.06,2,0.042,0,0.041,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,1.06,False,0.041,0.042,100.0,100.0,5.0
144,144,146,Where,Region*,"
Description: Filter relation to hold only relevant records.Filter condition: (region.r_name = 'ASIA'::bpchar)",805cb516d5de3a812d77596c4cbd3a46b9f537f8dde12c4e8ae2c6fa,0,1,2,0,0,0,4,0,0,0,0,1,1.06,2,0.042,0,0.041,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,0.0,False,-1.0190000000000001,0.0,0.0,0.0,1.0
145,145,146,Seq Scan,N1,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",c4c95d307c00e7791d376e3d725039ce2688c7dfc4ed573b61d5dfb0,0,25,2,0,0,0,8,0,0,0,0,25,1.25,2,0.007,0,0.004,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,1.25,False,0.004,0.007,100.0,100.0,1.0
146,146,156,Hash Join,Region* ⋈ N1,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (n1.n_regionkey = region.r_regionkey)",8b108ed57d73f3beef0a2bc88434290c38e8fa8a95118df26da07a59,0,5,4,0,0,0,4,0,0,0,0,5,2.47,2,0.074,0,0.067,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,1.2200000000000002,False,-1.183,0.031999999999999994,49.39271255060729,43.243243243243235,1.0
147,147,150,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,30,225292,0,0,0,24,0,0,0,0,30,106.43,6823,0.239,0,0.022,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,106.43,False,0.022,0.239,100.0,100.0,1.0
148,148,149,Seq Scan,Part,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",22c5f8c5f3b14c12e92266af272370ce2881b0c042e3fc86fddf2065,0,500000,20482,0,0,0,4,0,0,0,0,2148,24514.26,2,171.776,0,0.055,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,24514.26,False,0.055,171.776,100.0,100.0,232.77467411545624
149,149,150,Where,Part*,"
Description: Filter relation to hold only relevant records.Filter condition: ((part.p_type)::text = 'MEDIUM PLATED BRASS'::text)",26995317aa1be33cdbb72a565aa66d12636606870406c7a72410cf34,0,3412,20482,0,0,0,4,0,0,0,0,2148,24514.26,2,171.776,0,0.055,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,0.0,False,-24514.204999999998,0.0,0.0,0.0,1.5884543761638734
150,150,153,Nested Loop,Lineitem ⋈ Part*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,102412,245774,0,0,0,20,0,0,0,0,64442,253775.11,2,1047.874,0,0.102,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,229260.84999999998,False,-24514.158,876.098,90.34016377729084,83.60718941399442,1.5892120045932776
151,151,152,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,3750000,130460,0,0,0,12,0,0,0,0,571773,158585.0,2,1442.225,0,0.012,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,158585.0,False,0.012,1442.225,100.0,100.0,6.558546835894664
152,152,153,Where,Orders*,"
Description: Filter relation to hold only relevant records.Filter condition: ((orders.o_orderdate >= '1995-01-01'::date) AND (orders.o_orderdate <= '1996-12-31'::date))",f260c1f709e6cf47f581bb135d1775e14fc4e0b0d8e89e20579fc36a,0,1138932,130460,0,0,0,12,0,0,0,0,571773,158585.0,2,1442.225,0,0.012,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,0.0,False,-158584.988,0.0,0.0,0.0,1.9919303639731152
153,153,155,Hash Join,Lineitem ⋈ Part* ⋈ Orders*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (orders.o_orderkey = lineitem.l_orderkey)",7bba668cae95e930f54623180042c86be42fae415e2759ce33f06538,0,31032,376234,0,0,0,24,0,0,0,0,15230,415358.92,2,2987.858,0,1106.095,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,161583.81,False,-252669.01499999998,1545.6330000000003,38.902212573164434,51.73047045743139,2.0375574523965856
154,154,155,Seq Scan,Customer,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",895c138c3976a8303b733c2d99101e80ecda8ffca4fe25539668c21f,0,375000,17915,0,0,0,8,0,0,0,0,241935,20334.35,2,183.902,0,0.013,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,20334.35,False,0.013,183.902,100.0,100.0,1.5500031000062
155,155,156,Hash Join,Lineitem ⋈ Part* ⋈ Orders* ⋈ Customer,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (customer.c_custkey = orders.o_custkey)",dc27e624cd2ccf32ce2ab08ee8c14344f416ca272245c794a3a9dc5f,0,31032,394149,0,0,0,24,0,0,0,0,19651,436840.03,2,3334.897,0,3004.499,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,21481.110000000044,False,-412354.421,347.03899999999976,4.917385890665753,10.406288410106812,1.5791562770342475
156,156,158,Hash Join,Region* ⋈ N1 ⋈ Lineitem ⋈ Part* ⋈ Orders* ⋈ Customer,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (customer.c_nationkey = n1.n_nationkey)",f7e77049b35918ff34c934319bbc48b60e5d3c463f9ef00ed03be87d,0,6314,394153,0,0,0,20,0,0,0,0,3930,436955.55,2,3340.7,0,3004.614,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,115.51999999996042,False,-433835.416,5.802999999999884,0.02643747172909474,0.1737061094980059,1.606615776081425
157,157,158,Seq Scan,Supplier,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",4ca0f0ddbb9a6790abc1f8268f68b5b4e581048a5682b22c09b09dcc,0,25000,1109,0,0,0,8,0,0,0,0,29412,1403.12,2,7.571,0,0.02,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,1403.12,False,0.02,7.571,100.0,100.0,1.17648
158,158,159,Hash Join,Region* ⋈ N1 ⋈ Lineitem ⋈ Part* ⋈ Orders* ⋈ Customer ⋈ Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier.s_suppkey = lineitem.l_suppkey)",649245ea8cbaa3812f39dbb1d2a947b25ca239496e196577a1c4887d,0,6314,395262,0,0,0,20,0,0,0,0,7146,438541.14,2,3359.267,0,3344.238,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,1585.5900000000256,False,-433611.312,18.567000000000007,0.3615601491800805,0.5527098620026335,1.1317706683560342
159,159,160,Hash Join,N2 ⋈ Region* ⋈ N1 ⋈ Lineitem ⋈ Part* ⋈ Orders* ⋈ Customer ⋈ Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier.s_nationkey = n2.n_nationkey)",2c92edc30ee30f1e9f52a51f525956e5037e064aa6a28d5f816a49bf,0,6314,395281,0,0,0,46,0,0,0,0,7146,438676.69,2,3362.293,0,3344.37,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,135.54999999998836,False,-435196.77,3.0260000000002947,0.030899749881852248,0.08999810545958649,1.1317706683560342
160,160,161,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: [""(date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))"", ""PARTIAL sum(CASE WHEN (n2.n_name = 'INDONESIA'::bpchar) THEN (lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)) ELSE '0'::numeric END)"", ""PARTIAL sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))""]
Partial Mode: Partial
Strategy: Sorted
Group key: [""(date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))""]",02d07b4339853158781b4faa92f8dffcd3e26d2a606d08915ef9a450,0,2,395288,0,0,0,72,0,0,0,0,2406,439343.05,2,3369.691,0,3367.266,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,666.359999999986,False,-435309.424,7.3979999999996835,0.15167191104991556,0.21954535297152422,1203.0
161,161,245,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: [""(date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))"", ""(sum(CASE WHEN (n2.n_name = 'INDONESIA'::bpchar) THEN (lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)) ELSE '0'::numeric END) / sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))))""]
Partial Mode: Finalize
Strategy: Sorted
Group key: [""(date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))""]",6152079b9dd01ea503276f896e33a36e384e26d4e2cb96ea63065701,0,2,395288,0,0,0,40,0,0,0,0,2406,440697.94,1,3492.613,0,3373.619,5f1664ec4fd9134578316d9c642b8e8762ef4ec522b93309e822ac29,1354.890000000014,False,-435969.431,122.92200000000003,0.3074418727711806,3.519485267906866,1203.0
162,162,163,Seq Scan,N1,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",c4c95d307c00e7791d376e3d725039ce2688c7dfc4ed573b61d5dfb0,0,25,5,0,0,0,30,0,0,0,0,2,1.38,5,0.105,0,0.1,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,1.38,False,0.1,0.105,100.0,100.0,12.5
163,163,165,Where,Nation*,"
Description: Filter relation to hold only relevant records.Filter condition: ((n1.n_name = 'IRAN'::bpchar) OR (n1.n_name = 'INDONESIA'::bpchar))",2375a00b7e668b1f339f17535169a3c98d0d8c5e14f05192b2c0dc87,0,2,5,0,0,0,30,0,0,0,0,2,1.38,5,0.105,0,0.1,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,0.0,False,-1.2799999999999998,0.0,0.0,0.0,1.0
164,164,165,Seq Scan,Supplier,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",4ca0f0ddbb9a6790abc1f8268f68b5b4e581048a5682b22c09b09dcc,0,10000,1109,0,0,0,8,0,0,0,0,29412,1403.12,5,4.364,0,0.022,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,1403.12,False,0.022,4.364,100.0,100.0,2.9412
165,165,175,Hash Join,Nation* ⋈ Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier.s_nationkey = n1.n_nationkey)",6fd0f4d3a076ae85d7bac94b4e5fbd24eb7714b994177d6ab7596d05,0,809,1114,0,0,0,30,0,0,0,0,2353,1538.34,5,6.636,0,0.185,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,135.22000000000003,False,-1402.935,2.2720000000000002,8.789994409558357,34.237492465340566,2.908529048207664
166,166,167,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,4,2462377,0,0,0,24,0,0,0,0,23,2.52,606790,0.013,0,0.012,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,2.52,False,0.012,0.013,100.0,100.0,5.75
167,167,174,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: ((lineitem.l_shipdate >= '1995-01-01'::date) AND (lineitem.l_shipdate <= '1996-12-31'::date))",05d0bae8053f61d8394cf9f2ad506b30bdcdfc599617a67123bf1aa3,0,1,2462377,0,0,0,24,0,0,0,0,23,2.52,606790,0.013,0,0.012,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,0.0,False,-2.508,0.0,0.0,0.0,23.0
168,168,169,Seq Scan,N2,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",ce99bd8b20e429314045e7d0f6c9312c348e94ee2f9b1d0b360714bd,0,25,5,0,0,0,30,0,0,0,0,2,1.38,5,0.019,0,0.012,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,1.38,False,0.012,0.019,100.0,100.0,12.5
169,169,171,Where,Nation*,"
Description: Filter relation to hold only relevant records.Filter condition: ((n2.n_name = 'INDONESIA'::bpchar) OR (n2.n_name = 'IRAN'::bpchar))",8a8d31abff30705539d66aa954a01b35164a79d772926abb2a32869a,0,2,5,0,0,0,30,0,0,0,0,2,1.38,5,0.019,0,0.012,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,0.0,False,-1.3679999999999999,0.0,0.0,0.0,1.0
170,170,171,Seq Scan,Customer,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",895c138c3976a8303b733c2d99101e80ecda8ffca4fe25539668c21f,0,150000,17915,0,0,0,8,0,0,0,0,241935,20334.35,5,82.555,0,0.016,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,20334.35,False,0.016,82.555,100.0,100.0,1.6129
171,171,173,Hash Join,Nation* ⋈ Customer,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (customer.c_nationkey = n2.n_nationkey)",23bff33144431b239c81088deb3ee6dd9068f1e15f2fc740f326628f,0,12132,17920,0,0,0,30,0,0,0,0,19355,21436.56,5,129.124,0,0.096,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,1102.2100000000028,False,-20334.253999999997,46.56899999999999,5.141729829786135,36.06533254855797,1.595367622815694
172,172,173,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,1500000,130460,0,0,0,8,0,0,0,0,1875000,149210.0,5,569.677,0,0.031,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,149210.0,False,0.031,569.677,100.0,100.0,1.25
173,173,174,Hash Join,Nation* ⋈ Customer ⋈ Orders,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (orders.o_custkey = customer.c_custkey)",cb70ae0c056598a36c51aae2537fc76ca09ba60005433f9bfd78bb85,0,121358,148380,0,0,0,30,0,0,0,0,150000,178403.63,5,1392.376,0,138.413,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,29193.630000000005,False,-149071.587,822.699,16.363809413519224,59.08597964917522,1.2360124590055868
174,174,175,Nested Loop,Lineitem* ⋈ Nation* ⋈ Customer ⋈ Orders,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,147238,2610757,0,0,0,46,0,0,0,0,178450,590571.75,5,3113.473,0,138.534,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,412168.12,False,-178265.096,1721.097,69.79137081988767,55.279008361402205,1.2119833195234926
175,175,176,Hash Join,Nation* ⋈ Supplier ⋈ Lineitem* ⋈ Nation* ⋈ Customer ⋈ Orders,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (lineitem.l_suppkey = supplier.s_suppkey)",dc4eac666ff121a9f7bd573f99d38ae03a789b3f29537617642ab759,0,5989,2612066,0,0,0,72,0,0,0,0,7405,593013.2,5,3200.525,0,146.379,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,2441.4499999999534,False,-590425.371,87.05200000000013,0.41170247137836957,2.7199287616875396,1.2364334613458006
176,176,244,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['n1.n_name', 'n2.n_name', ""(date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))"", ""sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))""]
Partial Mode: Simple
Strategy: Sorted
Group key: ['n1.n_name', 'n2.n_name', ""(date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))""]",73cb19186b72bc12ac3723ceef489b001b9abea4d2a23b318b883c01,0,4,2612122,0,0,0,92,0,0,0,0,10036,598655.79,1,3366.837,0,3247.464,d87f901f2ea78d3635123cd8cc8e13486fb6e6ac8c3c5c8a99b6aa5a,5642.590000000084,False,-589765.7359999999,166.3119999999999,0.9425432935343503,4.939710476034328,2509.0
177,177,178,Seq Scan,Lineitem,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a0ccab0149e24cda520e5e673745d3789407045fc371ddf445db8605,0,5999959,562395,0,0,0,12,0,0,0,0,140669,731143.85,5,2792.282,0,0.066,e0b4cb4940cfbaed77d55ae382ed2c9d3a673225aade89400f8fd87c,731143.85,False,0.066,2792.282,100.0,100.0,42.65302945211809
178,178,179,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: ((lineitem.l_shipdate >= '1996-01-01'::date) AND (lineitem.l_shipdate < '1997-01-01 00:00:00'::timestamp without time zone) AND (lineitem.l_discount >= 0.04) AND (lineitem.l_discount <= 0.06) AND (lineitem.l_quantity < '24'::numeric))",5bba4ff30110e42d05bfdcf7271edb84f6dcbdd16df5bad330e8ae25,0,114597,562395,0,0,0,12,0,0,0,0,140669,731143.85,5,2792.282,0,0.066,e0b4cb4940cfbaed77d55ae382ed2c9d3a673225aade89400f8fd87c,0.0,False,-731143.784,0.0,0.0,0.0,1.2275103187692522
179,179,180,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['PARTIAL sum((l_extendedprice * l_discount))']
Partial Mode: Partial
Strategy: Plain
",ac9b981e98428861580eb368648b259cb4345f1dd410b0cc5c68cb45,0,1,562395,0,0,0,32,0,0,0,0,1,731847.21,5,2854.664,0,2854.663,e0b4cb4940cfbaed77d55ae382ed2c9d3a673225aade89400f8fd87c,703.359999999986,False,-728289.187,62.38200000000006,0.09610749216356049,2.185265936726706,1.0
180,180,243,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['sum((l_extendedprice * l_discount))']
Partial Mode: Finalize
Strategy: Plain
",938f17c6355e317f211c1187d3c6edf74c3f53dc0ba7f4e489c6800a,0,1,562395,0,0,0,32,0,0,0,0,1,732847.64,1,2958.334,0,2861.156,e0b4cb4940cfbaed77d55ae382ed2c9d3a673225aade89400f8fd87c,1000.4300000000512,False,-728986.054,103.66999999999962,0.13651268632045416,3.5043372384592013,1.0
181,181,193,Seq Scan,Supplier,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",4ca0f0ddbb9a6790abc1f8268f68b5b4e581048a5682b22c09b09dcc,0,10000,1109,0,0,0,8,0,0,0,0,29412,1403.12,5,4.483,0,0.022,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,1403.12,False,0.022,4.483,100.0,100.0,2.9412
182,182,192,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,4,930802,0,0,0,20,0,0,0,0,78,3.9,229347,0.018,0,0.016,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,3.9,False,0.016,0.018,100.0,100.0,19.5
183,183,184,Seq Scan,Region,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5a126a828c46cfb5bfa32edb987d185c6c82c0c2f6b6466e0e25945a,0,5,5,0,0,0,4,0,0,0,0,1,1.06,5,0.054,0,0.053,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,1.06,False,0.053,0.054,100.0,100.0,5.0
184,184,186,Where,Region*,"
Description: Filter relation to hold only relevant records.Filter condition: (region.r_name = 'ASIA'::bpchar)",805cb516d5de3a812d77596c4cbd3a46b9f537f8dde12c4e8ae2c6fa,0,1,5,0,0,0,4,0,0,0,0,1,1.06,5,0.054,0,0.053,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,0.0,False,-1.0070000000000001,0.0,0.0,0.0,1.0
185,185,186,Seq Scan,Nation,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a50ed53558b17945873b4969d0b0b1b9b9977f9ee239f04a58795469,0,25,5,0,0,0,34,0,0,0,0,25,1.25,5,0.081,0,0.078,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,1.25,False,0.078,0.081,100.0,100.0,1.0
186,186,188,Hash Join,Region* ⋈ Nation,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (nation.n_regionkey = region.r_regionkey)",ea21858e8568422862bce2b799cd0f65d2331a384d973f15f6a80737,0,5,10,0,0,0,30,0,0,0,0,5,2.47,5,0.179,0,0.172,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,1.2200000000000002,False,-1.078,0.09799999999999999,49.39271255060729,54.7486033519553,1.0
187,187,188,Seq Scan,Customer,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",895c138c3976a8303b733c2d99101e80ecda8ffca4fe25539668c21f,0,150000,17915,0,0,0,8,0,0,0,0,241935,20334.35,5,80.164,0,0.021,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,20334.35,False,0.021,80.164,100.0,100.0,1.6129
188,188,191,Hash Join,Region* ⋈ Nation ⋈ Customer,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (customer.c_nationkey = nation.n_nationkey)",57a787b3a545701248253ff524aca1defb7bb249633750570a86396f,0,30082,17925,0,0,0,38,0,0,0,0,48387,21728.01,5,122.512,0,0.224,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,1393.6599999999999,False,-20334.126,42.348,6.414117077449799,34.56640982107875,1.6085034239744698
189,189,190,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,1500000,130460,0,0,0,8,0,0,0,0,290818,158585.0,5,613.856,0,0.047,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,158585.0,False,0.047,613.856,100.0,100.0,5.157865056495815
190,190,191,Where,Orders*,"
Description: Filter relation to hold only relevant records.Filter condition: ((orders.o_orderdate >= '1996-01-01'::date) AND (orders.o_orderdate < '1997-01-01 00:00:00'::timestamp without time zone))",c3bced974b06c80d4499dab61d9d24e0ecb19b46006af8ce580f24ca,0,228311,130460,0,0,0,8,0,0,0,0,290818,158585.0,5,613.856,0,0.047,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,0.0,False,-158584.953,0.0,0.0,0.0,1.2737800631594622
191,191,192,Hash Join,Region* ⋈ Nation ⋈ Customer ⋈ Orders*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (orders.o_custkey = customer.c_custkey)",cb70ae0c056598a36c51aae2537fc76ca09ba60005433f9bfd78bb85,0,45869,148385,0,0,0,38,0,0,0,0,58164,182196.04,5,896.461,0,146.336,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,23611.040000000008,False,-158438.664,282.605,12.959140055952922,31.524516961697163,1.2680459569643987
192,192,193,Nested Loop,Lineitem ⋈ Region* ⋈ Nation ⋈ Customer ⋈ Orders*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,183471,1079187,0,0,0,50,0,0,0,0,232652,454388.31,5,1833.689,0,146.436,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,272192.27,False,-182049.60400000002,937.2280000000001,59.90300894844764,51.111611620072985,1.2680587122760545
193,193,194,Hash Join,Supplier ⋈ Lineitem ⋈ Region* ⋈ Nation ⋈ Customer ⋈ Orders*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))",9f7b553edc9d24464670f3dac4aef4482449ce3c09ea0f3d81a8a2af,0,7396,1080355,0,0,0,38,0,0,0,0,9283,458032.1,5,1929.894,0,154.78,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,3643.789999999979,False,-454233.52999999997,96.20499999999993,0.7955315795552275,4.984988812857075,1.255137912385073
194,194,195,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['nation.n_name', ""PARTIAL sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))""]
Partial Mode: Partial
Strategy: Sorted
Group key: ['nation.n_name']",1e646b535cbd51d37615f8577bc91374d71450f726985900a30d95de,0,5,1080383,0,0,0,58,0,0,0,0,25,458760.22,5,1945.149,0,1941.693,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,728.1199999999953,False,-456090.40699999995,15.254999999999882,0.15871472029549452,0.7842586866096058,5.0
195,195,242,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['nation.n_name', ""sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))""]
Partial Mode: Finalize
Strategy: Sorted
Group key: ['nation.n_name']",c964bae8c5525edd4d453dc50fe1d08f4c607f68d68686ee6c61e8e2,0,5,1080383,0,0,0,58,0,0,0,0,25,459773.25,1,2034.282,0,1949.99,2192d88c33a573d1aa9b41664e6b85e52891c6091bcd1520b84d164f,1013.0300000000279,False,-456810.23,89.13300000000004,0.22033252260761754,4.381545921361937,5.0
196,196,197,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,2,1112945,0,0,0,4,0,0,0,0,26,8.05,277597,0.014,0,0.014,447e604b008d87c746869d135365019e4d86edc1e82c2a73ffcd728d,8.05,False,0.014,0.014,100.0,100.0,13.0
197,197,200,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: (lineitem.l_commitdate < lineitem.l_receiptdate)",d2af5a933fc8a0f6b1a207af9492cdf5c479ffce2c5d9f366bf8d89f,0,1,1112945,0,0,0,4,0,0,0,0,26,8.05,277597,0.014,0,0.014,447e604b008d87c746869d135365019e4d86edc1e82c2a73ffcd728d,0.0,False,-8.036000000000001,0.0,0.0,0.0,26.0
198,198,199,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,1500000,130460,0,0,0,20,0,0,0,0,68949,158585.0,5,565.303,0,0.021,447e604b008d87c746869d135365019e4d86edc1e82c2a73ffcd728d,158585.0,False,0.021,565.303,100.0,100.0,21.755210372884306
199,199,200,Where,Orders*,"
Description: Filter relation to hold only relevant records.Filter condition: ((orders.o_orderdate >= '1994-02-01'::date) AND (orders.o_orderdate < '1994-05-01 00:00:00'::timestamp without time zone))",4525cff56ae603b10dbf921701c70876f622f70dac0a6dbf877b50c6,0,55519,130460,0,0,0,20,0,0,0,0,68949,158585.0,5,565.303,0,0.021,447e604b008d87c746869d135365019e4d86edc1e82c2a73ffcd728d,0.0,False,-158584.979,0.0,0.0,0.0,1.2418991696536321
200,200,201,Nested Loop,Lineitem* ⋈ Orders*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Semi Join",0de2b71b114f8106a0a85aa7f980f9e22d273cf20407184823d1a5b2,0,50913,1243405,0,0,0,16,0,0,0,0,3542,209981.71,5,1416.377,0,0.089,447e604b008d87c746869d135365019e4d86edc1e82c2a73ffcd728d,51396.70999999999,False,-158584.911,851.074,24.47675561838219,60.08809801345263,14.37408243929983
201,201,202,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['orders.o_orderpriority', 'PARTIAL count(*)']
Partial Mode: Partial
Strategy: Sorted
Group key: ['orders.o_orderpriority']",2fa61b3824443f15d4c772f8242e49b3cf46dd07e9b6db23ded0162f,0,5,1243433,0,0,0,24,0,0,0,0,5,210217.13,5,1465.383,0,1456.755,447e604b008d87c746869d135365019e4d86edc1e82c2a73ffcd728d,235.4200000000128,False,-208524.955,49.006000000000085,0.11198897064193236,3.3442451563857425,1.0
202,202,241,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['orders.o_orderpriority', 'count(*)']
Partial Mode: Finalize
Strategy: Sorted
Group key: ['orders.o_orderpriority']",30122688d534363233bf1f23531d4aaa757f8b504b2ec0668f7d9437,0,5,1243433,0,0,0,24,0,0,0,0,5,211219.72,1,1567.461,0,1480.146,447e604b008d87c746869d135365019e4d86edc1e82c2a73ffcd728d,1002.5899999999965,False,-208736.984,102.07799999999997,0.4746668540229087,6.512315138941255,1.0
203,203,204,Index Scan,Lineitem,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",338f433aa55b13214fa3e715a5d711038489be0effe50685f67a3033,0,4,2953017,0,0,0,16,0,0,0,0,42,2.68,727729,0.012,0,0.012,08f7add52c8a53b1c9ec8621f36c157a3f55fc90bf5e84e070f35151,2.68,False,0.012,0.012,100.0,100.0,10.5
204,204,210,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: (lineitem.l_shipdate > '1995-03-08'::date)",f2b8a332319378b279031275e9cf7cb62b01088652ba41d4b63df7de,0,0,2953017,0,0,0,16,0,0,0,0,42,2.68,727729,0.012,0,0.012,08f7add52c8a53b1c9ec8621f36c157a3f55fc90bf5e84e070f35151,0.0,False,-2.668,0.0,0.0,0.0,inf
205,205,206,Seq Scan,Customer,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",895c138c3976a8303b733c2d99101e80ecda8ffca4fe25539668c21f,0,150000,17915,0,0,0,4,0,0,0,0,49121,20939.19,5,99.992,0,0.052,08f7add52c8a53b1c9ec8621f36c157a3f55fc90bf5e84e070f35151,20939.19,False,0.052,99.992,100.0,100.0,3.0536837605097618
206,206,209,Where,Customer*,"
Description: Filter relation to hold only relevant records.Filter condition: (customer.c_mktsegment = 'BUILDING'::bpchar)",6a0aa20bf455a03dad240155d9b2b85d07439ad2c3564a7b19ee7841,0,30059,17915,0,0,0,4,0,0,0,0,49121,20939.19,5,99.992,0,0.052,08f7add52c8a53b1c9ec8621f36c157a3f55fc90bf5e84e070f35151,0.0,False,-20939.138,0.0,0.0,0.0,1.6341528327622343
207,207,208,Seq Scan,Orders,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5c6dc6de65a6425a67690697be735c9bbd1d29a1ecd9e4aa2791a60b,0,1500000,130460,0,0,0,16,0,0,0,0,896334,153897.5,5,603.365,0,0.027,08f7add52c8a53b1c9ec8621f36c157a3f55fc90bf5e84e070f35151,153897.5,False,0.027,603.365,100.0,100.0,1.6734833220652123
208,208,209,Where,Orders*,"
Description: Filter relation to hold only relevant records.Filter condition: (orders.o_orderdate < '1995-03-08'::date)",f5f2943733c69636dd941203e043d78a9cd196ac36297b8b823805ad,0,724556,130460,0,0,0,16,0,0,0,0,896334,153897.5,5,603.365,0,0.027,08f7add52c8a53b1c9ec8621f36c157a3f55fc90bf5e84e070f35151,0.0,False,-153897.473,0.0,0.0,0.0,1.237080363698596
209,209,210,Hash Join,Customer* ⋈ Orders*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (orders.o_custkey = customer.c_custkey)",cb70ae0c056598a36c51aae2537fc76ca09ba60005433f9bfd78bb85,0,145546,148567,0,0,0,12,0,0,0,0,181986,179399.01,5,1081.621,0,111.676,08f7add52c8a53b1c9ec8621f36c157a3f55fc90bf5e84e070f35151,25501.51000000001,False,-153785.824,478.2560000000001,14.214966961077439,44.216597125980364,1.2503675813832054
210,210,211,Nested Loop,Lineitem* ⋈ Customer* ⋈ Orders*,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,30082,3101584,0,0,0,24,0,0,0,0,393659,743183.25,5,2949.497,0,111.975,08f7add52c8a53b1c9ec8621f36c157a3f55fc90bf5e84e070f35151,563784.24,False,-179287.035,1867.8759999999997,75.86073017657489,63.328628576330125,13.086197726215012
211,211,212,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['lineitem.l_orderkey', ""sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))"", 'orders.o_orderdate', 'orders.o_shippriority']
Partial Mode: Simple
Strategy: Hashed
Group key: ['lineitem.l_orderkey', 'orders.o_orderdate', 'orders.o_shippriority']",89dd4c9a1f7973296ad9b94b312786beb8536537f94e4e3aa1a62117,0,57082,3101584,0,0,0,44,0,0,0,0,1574635,944949.22,1,3147.33,0,3031.977,08f7add52c8a53b1c9ec8621f36c157a3f55fc90bf5e84e070f35151,201765.96999999997,False,-740151.273,197.83300000000008,21.352043657965027,6.2857406118837265,27.585491047966084
212,212,240,Limit,LIMIT 10,"
Description: Returns a specified number of rows from a record set.LIMIT: 10",87cc2177bdf1a63181881c51bfd954f124ec80f716d7d39916c3ac78,0,10,3101590,0,0,0,44,0,0,0,0,10,978976.54,1,3163.341,0,3123.412,08f7add52c8a53b1c9ec8621f36c157a3f55fc90bf5e84e070f35151,34027.320000000065,False,-941825.808,16.010999999999967,3.475805456992878,0.5061420820581773,1.0
213,213,214,Seq Scan,Region_1,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",7b7bd0f4f2202463930f8e64ba88a74eb9ef3e6517548d6dcf99ae59,0,5,1,0,0,0,4,0,0,0,0,1,1.06,1,0.008,0,0.007,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,1.06,False,0.007,0.008,100.0,100.0,5.0
214,214,216,Where,Region*,"
Description: Filter relation to hold only relevant records.Filter condition: (region_1.r_name = 'AMERICA'::bpchar)",01725ae19abf9ccb28420d6e477e5fe931017865244c4f071c4bf132,0,1,1,0,0,0,4,0,0,0,0,1,1.06,1,0.008,0,0.007,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,0.0,False,-1.0530000000000002,0.0,0.0,0.0,1.0
215,215,216,Seq Scan,Nation_1,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",fa106da414161938b83f2c2fe2875a3ac2f4f7c7728a9d30a4616a89,0,25,1,0,0,0,8,0,0,0,0,25,1.25,1,0.008,0,0.005,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,1.25,False,0.005,0.008,100.0,100.0,1.0
216,216,218,Hash Join,Region* ⋈ Nation_1,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (nation_1.n_regionkey = region_1.r_regionkey)",ae8cd6717ec6d86731322bc44e9938238d13c03457995bdd1a06b252,0,5,2,0,0,0,4,0,0,0,0,5,2.47,1,0.041,0,0.033,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,1.2200000000000002,False,-1.217,0.033,49.39271255060729,80.48780487804879,1.0
217,217,218,Seq Scan,Supplier_1,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",6ac9e2882e6c2972917de8bb5d5155e44fd092f2fa039aafad94f5e0,0,50000,1109,0,0,0,8,0,0,0,0,50000,1609.0,1,7.122,0,0.014,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,1609.0,False,0.014,7.122,100.0,100.0,1.0
218,218,220,Hash Join,Region* ⋈ Nation_1 ⋈ Supplier_1,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier_1.s_nationkey = nation_1.n_nationkey)",46bacc4d695f68704803f338a72831b1187cb66b5416afe170626912,0,10047,1111,0,0,0,4,0,0,0,0,10000,1899.03,1,16.05,0,0.075,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,290.03,False,-1608.925,8.928,15.272533872555988,55.626168224299064,1.0047
219,219,220,Index Scan,Partsupp_1,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",e7c578a7f92850224b1f1f08cad778477bcca3c490430d10a4140f09,0,4,25639,0,0,0,10,0,0,0,0,10,8.61,6285,0.007,0,0.006,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,8.61,False,0.006,0.007,100.0,100.0,2.5
220,220,221,Hash Join,Region* ⋈ Nation_1 ⋈ Supplier_1 ⋈ Partsupp_1,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (partsupp_1.ps_suppkey = supplier_1.s_suppkey)",51c9d2eb11139d4cbc1ed52887fc1c85835e4413e9180df194308993,0,1,26750,0,0,0,6,0,0,0,0,2,2032.69,6285,0.014,0,0.01,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,133.66000000000008,False,-1899.02,-16.036,6.575523075333675,-114542.85714285716,2.0
221,221,232,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['min(partsupp_1.ps_supplycost)']
Partial Mode: Simple
Strategy: Plain
",5028bef7971fb13c5431d53f674d042314e7ece77926b4ce13dddd81,0,1,26750,0,0,0,32,0,0,0,0,1,2032.71,6285,0.015,0,0.015,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,0.01999999999998181,False,-2032.675,0.0009999999999999992,0.00098390818168759,6.666666666666661,1.0
222,222,229,Index Scan,Partsupp,"
Description: Finds relevant records based on an Index. Index Scans perform 2 read operations: one to read the index and another to read the actual value from the table.",b7af1440e3ad5cacdc63ff3cbeb0f79174519d466ddb347871f45d96,0,80,833901,0,0,0,14,0,0,0,0,80,9.07,10047,0.147,0,0.009,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,9.07,False,0.009,0.147,100.0,100.0,1.0
223,223,224,Seq Scan,Region,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",5a126a828c46cfb5bfa32edb987d185c6c82c0c2f6b6466e0e25945a,0,5,1,0,0,0,4,0,0,0,0,1,1.06,1,0.023,0,0.022,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,1.06,False,0.022,0.023,100.0,100.0,5.0
224,224,226,Where,Region*,"
Description: Filter relation to hold only relevant records.Filter condition: (region.r_name = 'AMERICA'::bpchar)",a6f302629df09fbe3d2282b763193dc374ce1548b1409f68b5ad2f64,0,1,1,0,0,0,4,0,0,0,0,1,1.06,1,0.023,0,0.022,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,0.0,False,-1.038,0.0,0.0,0.0,1.0
225,225,226,Seq Scan,Nation,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a50ed53558b17945873b4969d0b0b1b9b9977f9ee239f04a58795469,0,25,1,0,0,0,34,0,0,0,0,25,1.25,1,0.024,0,0.021,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,1.25,False,0.021,0.024,100.0,100.0,1.0
226,226,228,Hash Join,Region* ⋈ Nation,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (nation.n_regionkey = region.r_regionkey)",ea21858e8568422862bce2b799cd0f65d2331a384d973f15f6a80737,0,5,2,0,0,0,30,0,0,0,0,5,2.47,1,0.085,0,0.075,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,1.2200000000000002,False,-1.175,0.061000000000000006,49.39271255060729,71.76470588235294,1.0
227,227,228,Seq Scan,Supplier,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",4ca0f0ddbb9a6790abc1f8268f68b5b4e581048a5682b22c09b09dcc,0,50000,1109,0,0,0,144,0,0,0,0,50000,1609.0,1,31.801,0,0.035,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,1609.0,False,0.035,31.801,100.0,100.0,1.0
228,228,229,Hash Join,Region* ⋈ Nation ⋈ Supplier,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with (supplier.s_nationkey = nation.n_nationkey)",57debb3f95a5b196ba8535f8bbb91f15a25aa420438109458e5ef5a0,0,10047,1111,0,0,0,166,0,0,0,0,10000,1899.03,1,47.36,0,0.148,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,290.03,False,-1608.852,15.559000000000001,15.272533872555988,32.85261824324325,1.0047
229,229,232,Nested Loop,Partsupp ⋈ Region* ⋈ Nation ⋈ Supplier,"
Description: Merges two record sets by looping through every record in the first set and trying to find a match in the second set. All matching records are returned.Inner Join",72bc23f2ee507751ac50cb54065376f5bb108ee4e0f53290c60d477d,0,803760,835012,0,0,0,172,0,0,0,0,799776,100638.02,1,1851.006,0,0.174,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,98738.99,False,-1898.856,1803.6460000000002,98.11300937756924,97.44139132990385,1.0049813947905413
230,230,231,Seq Scan,Part,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",22c5f8c5f3b14c12e92266af272370ce2881b0c042e3fc86fddf2065,0,1000000,20482,0,0,0,30,0,0,0,0,4392,35482.0,1,461.632,0,0.086,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,35482.0,False,0.086,461.632,100.0,100.0,227.68670309653916
231,231,232,Where,Part*,"
Description: Filter relation to hold only relevant records.Filter condition: (((part.p_type)::text ~~ '%COPPER'::text) AND (part.p_size = 42))",fa4ccee0e8bd1a7d3efaa56e71922052dd519c828c91c0b3d4bee946,0,3956,20482,0,0,0,30,0,0,0,0,4392,35482.0,1,461.632,0,0.086,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,0.0,False,-35481.914,0.0,0.0,0.0,1.1102123356926188
232,232,233,Hash Join,AGG ⋈ Partsupp ⋈ Region* ⋈ Nation ⋈ Supplier ⋈ Part*,"
Description: Joins to record sets by hashing one of them (using a Hash Scan).Inner Join with ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))",375dacc0290cab29fda0b124e089edd475f003fbb220e7e5220beb2d,0,2329,882244,0,0,0,192,0,0,0,0,1,9075817.51,1,3155.548,0,2610.963,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,8975179.49,False,-98027.057,1304.5419999999997,98.89114099210221,41.341218704326465,2329.0
233,233,239,Limit,LIMIT 100,"
Description: Returns a specified number of rows from a record set.LIMIT: 100",219e0f8451b029d5147a305115daf1d46103986aa93db8a7a0295172,0,100,882253,0,0,0,192,0,0,0,0,1,9075817.52,1,3157.792,0,3157.761,8d0874ee4f2242ba5082551978ce1778a0731aba9e2facfbcdb9ae32,0.009999999776482582,False,-9072659.749,2.244000000000142,1.1018290919188272e-07,0.07106231189388477,100.0
234,234,235,Seq Scan,Lineitem,"
Description: Finds relevant records by sequentially scanning the input record set. When reading from a table, Seq Scans (unlike Index Scans) perform a single read operation (only the table is read).",a0ccab0149e24cda520e5e673745d3789407045fc371ddf445db8605,0,5999959,562395,0,0,0,25,0,0,0,0,7372504,656144.36,5,3256.114,0,0.026,4693f2be18a158355cd85fc95c8d27898a2761c4e39eff4d8badef2e,656144.36,False,0.026,3256.114,100.0,100.0,1.2287590631869318
235,235,236,Where,Lineitem*,"
Description: Filter relation to hold only relevant records.Filter condition: (lineitem.l_shipdate <= '1998-08-29 00:00:00'::timestamp without time zone)",9a597967f7f9bc8def67864117e520be63da544c154eb912b2b14297,0,5907938,562395,0,0,0,25,0,0,0,0,7372504,656144.36,5,3256.114,0,0.026,4693f2be18a158355cd85fc95c8d27898a2761c4e39eff4d8badef2e,0.0,False,-656144.334,0.0,0.0,0.0,1.2478979975754654
236,236,237,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['l_returnflag', 'l_linestatus', 'PARTIAL sum(l_quantity)', 'PARTIAL sum(l_extendedprice)', ""PARTIAL sum((l_extendedprice * ('1'::numeric - l_discount)))"", ""PARTIAL sum(((l_extendedprice * ('1'::numeric - l_discount)) * ('1'::numeric + l_tax)))"", 'PARTIAL avg(l_quantity)', 'PARTIAL avg(l_extendedprice)', 'PARTIAL avg(l_discount)', 'PARTIAL count(*)']
Partial Mode: Partial
Strategy: Hashed
Group key: ['lineitem.l_returnflag', 'lineitem.l_linestatus']",5dfecfc0f0af47590f79712754080f5e3e46039438ba1c5548e38e06,0,4,562395,0,0,0,236,0,0,0,0,6,951044.69,5,14674.931,0,14674.914,4693f2be18a158355cd85fc95c8d27898a2761c4e39eff4d8badef2e,294900.32999999996,False,-641469.446,11418.817000000001,31.00804127301315,77.81172531577832,1.5
237,237,238,Aggregate,AGG,"
Description: Groups records together based on a GROUP BY or aggregate function (e.g. sum()).Output: ['l_returnflag', 'l_linestatus', 'sum(l_quantity)', 'sum(l_extendedprice)', ""sum((l_extendedprice * ('1'::numeric - l_discount)))"", ""sum(((l_extendedprice * ('1'::numeric - l_discount)) * ('1'::numeric + l_tax)))"", 'avg(l_quantity)', 'avg(l_extendedprice)', 'avg(l_discount)', 'count(*)']
Partial Mode: Finalize
Strategy: Sorted
Group key: ['lineitem.l_returnflag', 'lineitem.l_linestatus']",d8893e27feea3d9fa1921f8047fe762fb60b78ea8ebf0ccf0b702c8d,0,4,562423,0,0,0,236,0,0,0,0,6,952048.88,1,14808.679,0,14681.695,4693f2be18a158355cd85fc95c8d27898a2761c4e39eff4d8badef2e,1004.1900000000605,False,-936362.995,133.7479999999996,0.10547672720334071,0.9031730649303669,1.5
